{"remainingRequest":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/babel-loader/lib/index.js!/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/src/views/modules/job/schedule.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/src/views/modules/job/schedule.vue","mtime":1569313608000},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":1593769583426},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/babel-loader/lib/index.js","mtime":1593769580300},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":1593769583426},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/vue-loader/lib/index.js","mtime":1593769583804}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport mixinViewModule from '@/mixins/view-module';\nimport AddOrUpdate from \"./schedule-add-or-update\";\nimport Log from \"./schedule-log\";\nexport default {\n  mixins: [mixinViewModule],\n  data: function data() {\n    return {\n      mixinViewModuleOptions: {\n        getDataListURL: '/sys/schedule/page',\n        getDataListIsPage: true,\n        deleteURL: '/sys/schedule',\n        deleteIsBatch: true\n      },\n      dataForm: {\n        beanName: ''\n      },\n      logVisible: false\n    };\n  },\n  components: {\n    AddOrUpdate: AddOrUpdate,\n    Log: Log\n  },\n  methods: {\n    // 暂停\n    pauseHandle: function pauseHandle(id) {\n      var _this = this;\n\n      if (!id && this.dataListSelections.length <= 0) {\n        return this.$message({\n          message: this.$t('prompt.deleteBatch'),\n          type: 'warning',\n          duration: 500\n        });\n      }\n\n      this.$confirm(this.$t('prompt.info', {\n        'handle': this.$t('schedule.pause')\n      }), this.$t('prompt.title'), {\n        confirmButtonText: this.$t('confirm'),\n        cancelButtonText: this.$t('cancel'),\n        type: 'warning'\n      }).then(function () {\n        _this.$http.put('/sys/schedule/pause', id ? [id] : _this.dataListSelections.map(function (item) {\n          return item.id;\n        })).then(function (_ref) {\n          var res = _ref.data;\n\n          if (res.code !== 0) {\n            return _this.$message.error(res.msg);\n          }\n\n          _this.$message({\n            message: _this.$t('prompt.success'),\n            type: 'success',\n            duration: 500,\n            onClose: function onClose() {\n              _this.getDataList();\n            }\n          });\n        }).catch(function () {});\n      }).catch(function () {});\n    },\n    // 恢复\n    resumeHandle: function resumeHandle(id) {\n      var _this2 = this;\n\n      if (!id && this.dataListSelections.length <= 0) {\n        return this.$message({\n          message: this.$t('prompt.deleteBatch'),\n          type: 'warning',\n          duration: 500\n        });\n      }\n\n      this.$confirm(this.$t('prompt.info', {\n        'handle': this.$t('schedule.resume')\n      }), this.$t('prompt.title'), {\n        confirmButtonText: this.$t('confirm'),\n        cancelButtonText: this.$t('cancel'),\n        type: 'warning'\n      }).then(function () {\n        _this2.$http.put('/sys/schedule/resume', id ? [id] : _this2.dataListSelections.map(function (item) {\n          return item.id;\n        })).then(function (_ref2) {\n          var res = _ref2.data;\n\n          if (res.code !== 0) {\n            return _this2.$message.error(res.msg);\n          }\n\n          _this2.$message({\n            message: _this2.$t('prompt.success'),\n            type: 'success',\n            duration: 500,\n            onClose: function onClose() {\n              _this2.getDataList();\n            }\n          });\n        }).catch(function () {});\n      }).catch(function () {});\n    },\n    // 执行\n    runHandle: function runHandle(id) {\n      var _this3 = this;\n\n      if (!id && this.dataListSelections.length <= 0) {\n        return this.$message({\n          message: this.$t('prompt.deleteBatch'),\n          type: 'warning',\n          duration: 500\n        });\n      }\n\n      this.$confirm(this.$t('prompt.info', {\n        'handle': this.$t('schedule.run')\n      }), this.$t('prompt.title'), {\n        confirmButtonText: this.$t('confirm'),\n        cancelButtonText: this.$t('cancel'),\n        type: 'warning'\n      }).then(function () {\n        _this3.$http.put('/sys/schedule/run', id ? [id] : _this3.dataListSelections.map(function (item) {\n          return item.id;\n        })).then(function (_ref3) {\n          var res = _ref3.data;\n\n          if (res.code !== 0) {\n            return _this3.$message.error(res.msg);\n          }\n\n          _this3.$message({\n            message: _this3.$t('prompt.success'),\n            type: 'success',\n            duration: 500,\n            onClose: function onClose() {\n              _this3.getDataList();\n            }\n          });\n        }).catch(function () {});\n      }).catch(function () {});\n    },\n    // 日志列表\n    logHandle: function logHandle() {\n      var _this4 = this;\n\n      this.logVisible = true;\n      this.$nextTick(function () {\n        _this4.$refs.log.init();\n      });\n    }\n  }\n};",{"version":3,"sources":["schedule.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-card shadow=\"never\" class=\"aui-card--fill\">\r\n    <div class=\"mod-job__schedule\">\r\n      <el-form :inline=\"true\" :model=\"dataForm\" @keyup.enter.native=\"getDataList()\">\r\n        <el-form-item>\r\n          <el-input v-model=\"dataForm.beanName\" :placeholder=\"$t('schedule.beanName')\" clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"getDataList()\">{{ $t('query') }}</el-button>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button v-if=\"$hasPermission('sys:schedule:save')\" type=\"primary\" @click=\"addOrUpdateHandle()\">{{ $t('add') }}</el-button>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button v-if=\"$hasPermission('sys:schedule:delete')\" type=\"danger\" @click=\"deleteHandle()\">{{ $t('deleteBatch') }}</el-button>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button v-if=\"$hasPermission('sys:schedule:pause')\" type=\"danger\" @click=\"pauseHandle()\">{{ $t('schedule.pauseBatch') }}</el-button>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button v-if=\"$hasPermission('sys:schedule:resume')\" type=\"danger\" @click=\"resumeHandle()\">{{ $t('schedule.resumeBatch') }}</el-button>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button v-if=\"$hasPermission('sys:schedule:run')\" type=\"danger\" @click=\"runHandle()\">{{ $t('schedule.runBatch') }}</el-button>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button v-if=\"$hasPermission('sys:schedule:log')\" type=\"success\" @click=\"logHandle()\">{{ $t('schedule.log') }}</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-table\r\n        v-loading=\"dataListLoading\"\r\n        :data=\"dataList\"\r\n        border\r\n        @selection-change=\"dataListSelectionChangeHandle\"\r\n        @sort-change=\"dataListSortChangeHandle\"\r\n        style=\"width: 100%;\">\r\n        <el-table-column type=\"selection\" header-align=\"center\" align=\"center\" width=\"50\"></el-table-column>\r\n        <el-table-column prop=\"beanName\" :label=\"$t('schedule.beanName')\" header-align=\"center\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"params\" :label=\"$t('schedule.params')\" header-align=\"center\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"cronExpression\" :label=\"$t('schedule.cronExpression')\" header-align=\"center\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"remark\" :label=\"$t('schedule.remark')\" header-align=\"center\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"status\" :label=\"$t('schedule.status')\" sortable=\"custom\" header-align=\"center\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag v-if=\"scope.row.status === 1\" size=\"small\">{{ $t('schedule.status1') }}</el-tag>\r\n            <el-tag v-else size=\"small\" type=\"danger\">{{ $t('schedule.status0') }}</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column :label=\"$t('handle')\" fixed=\"right\" header-align=\"center\" align=\"center\" width=\"150\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button v-if=\"$hasPermission('sys:schedule:update')\" type=\"text\" size=\"small\" @click=\"addOrUpdateHandle(scope.row.id)\">{{ $t('update') }}</el-button>\r\n            <el-button v-if=\"$hasPermission('sys:schedule:pause')\" type=\"text\" size=\"small\" @click=\"pauseHandle(scope.row.id)\">{{ $t('schedule.pause') }}</el-button>\r\n            <el-button v-if=\"$hasPermission('sys:schedule:resume')\" type=\"text\" size=\"small\" @click=\"resumeHandle(scope.row.id)\">{{ $t('schedule.resume') }}</el-button>\r\n            <el-button v-if=\"$hasPermission('sys:schedule:run')\" type=\"text\" size=\"small\" @click=\"runHandle(scope.row.id)\">{{ $t('schedule.run') }}</el-button>\r\n            <el-button v-if=\"$hasPermission('sys:schedule:delete')\" type=\"text\" size=\"small\" @click=\"deleteHandle(scope.row.id)\">{{ $t('delete') }}</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <el-pagination\r\n        :current-page=\"page\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        :page-size=\"limit\"\r\n        :total=\"total\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        @size-change=\"pageSizeChangeHandle\"\r\n        @current-change=\"pageCurrentChangeHandle\">\r\n      </el-pagination>\r\n      <!-- 弹窗, 新增 / 修改 -->\r\n      <add-or-update v-if=\"addOrUpdateVisible\" ref=\"addOrUpdate\" @refreshDataList=\"getDataList\"></add-or-update>\r\n      <!-- 弹窗, 日志列表 -->\r\n      <log v-if=\"logVisible\" ref=\"log\"></log>\r\n    </div>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nimport mixinViewModule from '@/mixins/view-module'\r\nimport AddOrUpdate from './schedule-add-or-update'\r\nimport Log from './schedule-log'\r\nexport default {\r\n  mixins: [mixinViewModule],\r\n  data () {\r\n    return {\r\n      mixinViewModuleOptions: {\r\n        getDataListURL: '/sys/schedule/page',\r\n        getDataListIsPage: true,\r\n        deleteURL: '/sys/schedule',\r\n        deleteIsBatch: true\r\n      },\r\n      dataForm: {\r\n        beanName: ''\r\n      },\r\n      logVisible: false\r\n    }\r\n  },\r\n  components: {\r\n    AddOrUpdate,\r\n    Log\r\n  },\r\n  methods: {\r\n    // 暂停\r\n    pauseHandle (id) {\r\n      if (!id && this.dataListSelections.length <= 0) {\r\n        return this.$message({\r\n          message: this.$t('prompt.deleteBatch'),\r\n          type: 'warning',\r\n          duration: 500\r\n        })\r\n      }\r\n      this.$confirm(this.$t('prompt.info', { 'handle': this.$t('schedule.pause') }), this.$t('prompt.title'), {\r\n        confirmButtonText: this.$t('confirm'),\r\n        cancelButtonText: this.$t('cancel'),\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.$http.put('/sys/schedule/pause', id ? [id] : this.dataListSelections.map(item => item.id)).then(({ data: res }) => {\r\n          if (res.code !== 0) {\r\n            return this.$message.error(res.msg)\r\n          }\r\n          this.$message({\r\n            message: this.$t('prompt.success'),\r\n            type: 'success',\r\n            duration: 500,\r\n            onClose: () => {\r\n              this.getDataList()\r\n            }\r\n          })\r\n        }).catch(() => {})\r\n      }).catch(() => {})\r\n    },\r\n    // 恢复\r\n    resumeHandle (id) {\r\n      if (!id && this.dataListSelections.length <= 0) {\r\n        return this.$message({\r\n          message: this.$t('prompt.deleteBatch'),\r\n          type: 'warning',\r\n          duration: 500\r\n        })\r\n      }\r\n      this.$confirm(this.$t('prompt.info', { 'handle': this.$t('schedule.resume') }), this.$t('prompt.title'), {\r\n        confirmButtonText: this.$t('confirm'),\r\n        cancelButtonText: this.$t('cancel'),\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.$http.put('/sys/schedule/resume', id ? [id] : this.dataListSelections.map(item => item.id)).then(({ data: res }) => {\r\n          if (res.code !== 0) {\r\n            return this.$message.error(res.msg)\r\n          }\r\n          this.$message({\r\n            message: this.$t('prompt.success'),\r\n            type: 'success',\r\n            duration: 500,\r\n            onClose: () => {\r\n              this.getDataList()\r\n            }\r\n          })\r\n        }).catch(() => {})\r\n      }).catch(() => {})\r\n    },\r\n    // 执行\r\n    runHandle (id) {\r\n      if (!id && this.dataListSelections.length <= 0) {\r\n        return this.$message({\r\n          message: this.$t('prompt.deleteBatch'),\r\n          type: 'warning',\r\n          duration: 500\r\n        })\r\n      }\r\n      this.$confirm(this.$t('prompt.info', { 'handle': this.$t('schedule.run') }), this.$t('prompt.title'), {\r\n        confirmButtonText: this.$t('confirm'),\r\n        cancelButtonText: this.$t('cancel'),\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.$http.put('/sys/schedule/run', id ? [id] : this.dataListSelections.map(item => item.id)).then(({ data: res }) => {\r\n          if (res.code !== 0) {\r\n            return this.$message.error(res.msg)\r\n          }\r\n          this.$message({\r\n            message: this.$t('prompt.success'),\r\n            type: 'success',\r\n            duration: 500,\r\n            onClose: () => {\r\n              this.getDataList()\r\n            }\r\n          })\r\n        }).catch(() => {})\r\n      }).catch(() => {})\r\n    },\r\n    // 日志列表\r\n    logHandle () {\r\n      this.logVisible = true\r\n      this.$nextTick(() => {\r\n        this.$refs.log.init()\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/modules/job"}]}