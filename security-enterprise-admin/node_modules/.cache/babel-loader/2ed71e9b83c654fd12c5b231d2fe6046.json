{"remainingRequest":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/babel-loader/lib/index.js!/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/src/components/ren-process-start/src/ren-process-start.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/src/components/ren-process-start/src/ren-process-start.vue","mtime":1569313608000},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\nimport qs from 'qs';\nexport default {\n  name: 'RenProcessStart',\n  data: function data() {\n    return {\n      formUrl: '',\n      instanceIdUrl: '',\n      formName: null,\n      rootObj: null,\n      dataForm: {\n        processDefinitionKey: ''\n      },\n      // 回调函数\n      callbacks: {\n        startProcessSuccessCallback: null,\n        startProcessErrorCallback: null,\n        formSaveSuccessCallback: null,\n        formSaveErrorCallback: null\n      }\n    };\n  },\n  components: {},\n  created: function created() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.formUrl = _this.saveFormUrl;\n      _this.instanceIdUrl = _this.updateInstanceIdUrl;\n      _this.formName = _this.dataFormName;\n    });\n  },\n  props: {\n    saveFormUrl: String,\n    updateInstanceIdUrl: String,\n    dataFormName: String\n  },\n  watch: {\n    saveFormUrl: function saveFormUrl(val) {\n      this.formUrl = val;\n    },\n    updateInstanceIdUrl: function updateInstanceIdUrl(val) {\n      this.instanceIdUrl = val;\n    },\n    dataFormName: function dataFormName(val) {\n      this.formName = val;\n    }\n  },\n  methods: {\n    // 启动流程事件\n    processStartHandle: function processStartHandle() {\n      var _this2 = this;\n\n      if (!this.formUrl) {\n        return this.$message.error(this.$t('process.formURLError'));\n      }\n\n      if (!this.dataForm.processDefinitionKey) {\n        return this.$message.error(this.$t('process.keyError'));\n      }\n\n      if (!this.formName) {\n        return this.$message.error(this.$t('process.formNameError'));\n      }\n\n      this.rootObj.$refs[this.formName].validate(function (valid) {\n        if (!valid) {\n          return false;\n        }\n\n        _this2.$http.get(\"/act/process/lastestPage\", {\n          params: {\n            key: _this2.dataForm.processDefinitionKey\n          }\n        }).then(function (_ref) {\n          var res = _ref.data;\n\n          if (res.code !== 0) {\n            return _this2.$message.error(res.msg);\n          }\n\n          if (!res.data.list || res.data.list.length <= 0) {\n            return _this2.$message.error(_this2.$t('process.notExistError'));\n          }\n\n          _this2.$http['post'](_this2.formUrl, _this2.rootObj[_this2.formName]).then(function (_ref2) {\n            var res = _ref2.data;\n\n            if (res.code !== 0) {\n              _this2.$message.error(res.msg);\n\n              if (_this2.callbacks.formSaveErrorCallback) {\n                _this2.callbacks.formSaveErrorCallback(res);\n              }\n            }\n\n            if (_this2.callbacks.formSaveSuccessCallback) {\n              _this2.callbacks.formSaveSuccessCallback(res);\n            }\n\n            if (!res.data.businessKey) {\n              return _this2.$message.error(_this2.$t('process.businessKeyError')); // this.startProcess(this.dataForm.processDefinitionKey, null, this.rootObj[this.formName])\n            } else {\n              _this2.startProcess(_this2.dataForm.processDefinitionKey, res.data.businessKey, _this2.rootObj[_this2.formName]);\n            }\n          }).catch(function () {});\n        }).catch(function () {});\n      });\n    },\n    // 启动流程\n    startProcess: function startProcess(processDefinitionKey, businessKey, formData) {\n      var _this3 = this;\n\n      var data = {\n        processDefinitionKey: processDefinitionKey,\n        businessKey: businessKey,\n        variables: formData\n      };\n      this.$http['post']('/act/running/startOfBusinessKey', data).then(function (_ref3) {\n        var res = _ref3.data;\n\n        if (res.code !== 0) {\n          if (_this3.callbacks.startProcessErrorCallback) {\n            _this3.callbacks.startProcessErrorCallback(res.data);\n          }\n        }\n\n        _this3.$message({\n          message: _this3.$t('prompt.success'),\n          type: 'success',\n          duration: 500,\n          onClose: function onClose() {\n            if (_this3.callbacks.startProcessSuccessCallback) {\n              _this3.callbacks.startProcessSuccessCallback(res.data);\n            }\n          }\n        });\n\n        if (_this3.instanceIdUrl) {\n          var params = qs.stringify({\n            processInstanceId: res.data.processInstanceId,\n            processDefinitionKey: processDefinitionKey,\n            businessKey: businessKey\n          });\n\n          _this3.$http['post'](_this3.instanceIdUrl + '?' + params).then(function (_ref4) {\n            var res = _ref4.data;\n          });\n        }\n      }).catch(function () {});\n    }\n  }\n};",{"version":3,"sources":["ren-process-start.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-button type=\"primary\" @click=\"processStartHandle()\">{{ $t('process.createInstance') }}</el-button>\r\n</template>\r\n\r\n<script>\r\nimport qs from 'qs'\r\nexport default {\r\n  name: 'RenProcessStart',\r\n  data () {\r\n    return {\r\n      formUrl: '',\r\n      instanceIdUrl: '',\r\n      formName: null,\r\n      rootObj: null,\r\n      dataForm: {\r\n        processDefinitionKey: ''\r\n      },\r\n      // 回调函数\r\n      callbacks: {\r\n        startProcessSuccessCallback: null,\r\n        startProcessErrorCallback: null,\r\n        formSaveSuccessCallback: null,\r\n        formSaveErrorCallback: null\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n  },\r\n  created () {\r\n    this.$nextTick(() => {\r\n      this.formUrl = this.saveFormUrl\r\n      this.instanceIdUrl = this.updateInstanceIdUrl\r\n      this.formName = this.dataFormName\r\n    })\r\n  },\r\n  props: {\r\n    saveFormUrl: String,\r\n    updateInstanceIdUrl: String,\r\n    dataFormName: String\r\n  },\r\n  watch: {\r\n    saveFormUrl (val) {\r\n      this.formUrl = val\r\n    },\r\n    updateInstanceIdUrl (val) {\r\n      this.instanceIdUrl = val\r\n    },\r\n    dataFormName (val) {\r\n      this.formName = val\r\n    }\r\n  },\r\n  methods: {\r\n    // 启动流程事件\r\n    processStartHandle () {\r\n      if (!this.formUrl) {\r\n        return this.$message.error(this.$t('process.formURLError'))\r\n      }\r\n      if (!this.dataForm.processDefinitionKey) {\r\n        return this.$message.error(this.$t('process.keyError'))\r\n      }\r\n      if (!this.formName) {\r\n        return this.$message.error(this.$t('process.formNameError'))\r\n      }\r\n      this.rootObj.$refs[this.formName].validate((valid) => {\r\n        if (!valid) {\r\n          return false\r\n        }\r\n        this.$http.get(`/act/process/lastestPage`, {\r\n          params: {\r\n            key: this.dataForm.processDefinitionKey\r\n          }\r\n        }).then(({ data: res }) => {\r\n          if (res.code !== 0) {\r\n            return this.$message.error(res.msg)\r\n          }\r\n          if (!res.data.list || res.data.list.length <= 0) {\r\n            return this.$message.error(this.$t('process.notExistError'))\r\n          }\r\n          this.$http['post'](this.formUrl, this.rootObj[this.formName]).then(({ data: res }) => {\r\n            if (res.code !== 0) {\r\n              this.$message.error(res.msg)\r\n              if (this.callbacks.formSaveErrorCallback) {\r\n                this.callbacks.formSaveErrorCallback(res)\r\n              }\r\n            }\r\n            if (this.callbacks.formSaveSuccessCallback) {\r\n              this.callbacks.formSaveSuccessCallback(res)\r\n            }\r\n            if (!res.data.businessKey) {\r\n              return this.$message.error(this.$t('process.businessKeyError'))\r\n              // this.startProcess(this.dataForm.processDefinitionKey, null, this.rootObj[this.formName])\r\n            } else {\r\n              this.startProcess(this.dataForm.processDefinitionKey, res.data.businessKey, this.rootObj[this.formName])\r\n            }\r\n          }).catch(() => {})\r\n        }).catch(() => {})\r\n      })\r\n    },\r\n    // 启动流程\r\n    startProcess (processDefinitionKey, businessKey, formData) {\r\n      var data = {\r\n        processDefinitionKey: processDefinitionKey,\r\n        businessKey: businessKey,\r\n        variables: formData\r\n      }\r\n      this.$http['post']('/act/running/startOfBusinessKey', data).then(({ data: res }) => {\r\n        if (res.code !== 0) {\r\n          if (this.callbacks.startProcessErrorCallback) {\r\n            this.callbacks.startProcessErrorCallback(res.data)\r\n          }\r\n        }\r\n        this.$message({\r\n          message: this.$t('prompt.success'),\r\n          type: 'success',\r\n          duration: 500,\r\n          onClose: () => {\r\n            if (this.callbacks.startProcessSuccessCallback) {\r\n              this.callbacks.startProcessSuccessCallback(res.data)\r\n            }\r\n          }\r\n        })\r\n        if (this.instanceIdUrl) {\r\n          var params = qs.stringify({\r\n            processInstanceId: res.data.processInstanceId,\r\n            processDefinitionKey: processDefinitionKey,\r\n            businessKey: businessKey\r\n          })\r\n          this.$http['post'](this.instanceIdUrl + '?' + params).then(({ data: res }) => {})\r\n        }\r\n      }).catch(() => {})\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components/ren-process-start/src"}]}