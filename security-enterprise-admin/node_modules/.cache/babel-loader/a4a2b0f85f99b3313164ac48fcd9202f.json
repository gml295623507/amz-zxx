{"remainingRequest":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/babel-loader/lib/index.js!/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/src/components/ren-process-running/src/ren-task-handle.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/src/components/ren-process-running/src/ren-task-handle.vue","mtime":1569313608000},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":1593769583426},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/babel-loader/lib/index.js","mtime":1593769580300},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":1593769583426},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/vue-loader/lib/index.js","mtime":1593769583804}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport debounce from 'lodash/debounce';\nimport qs from 'qs';\nexport default {\n  data: function data() {\n    return {\n      visible: false,\n      handleType: '',\n      handleTitle: '',\n      dataForm: {\n        comment: '',\n        taskId: ''\n      },\n      // 回调函数\n      callbacks: {\n        taskHandleSuccessCallback: null,\n        taskHandleErrorCallback: null\n      }\n    };\n  },\n  computed: {\n    dataRule: function dataRule() {\n      return {\n        comment: [{\n          required: true,\n          message: this.$t('validate.required'),\n          trigger: 'blur'\n        }]\n      };\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      this.visible = true;\n\n      if (this.handleType === 'complete') {\n        this.handleTitle = this.$t('process.completeTask');\n      } else if (this.handleType === 'reject') {\n        this.handleTitle = this.$t('process.rejectTask');\n      } else if (this.handleType === 'termination') {\n        this.handleTitle = this.$t('process.terminationTask');\n      }\n\n      this.$nextTick(function () {\n        _this.$refs['dataForm'].resetFields();\n      });\n    },\n    // 表单提交\n    dataFormSubmitHandle: function dataFormSubmitHandle() {\n      if (this.handleType === 'complete') {\n        this.completeTask();\n      } else if (this.handleType === 'reject') {\n        this.rejectTask();\n      } else if (this.handleType === 'termination') {\n        this.terminationTask();\n      }\n    },\n    // 驳回\n    rejectTask: debounce(function () {\n      var _this2 = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        if (!valid) {\n          return false;\n        }\n\n        if (!_this2.dataForm.taskId) {\n          return false;\n        }\n\n        var params = qs.stringify({\n          'taskId': _this2.dataForm.taskId,\n          'comment': _this2.dataForm.comment\n        });\n\n        _this2.$http['post']('/act/task/backToFirst?', params).then(function (_ref) {\n          var res = _ref.data;\n\n          if (res.code !== 0) {\n            _this2.$message.error(res.msg);\n\n            if (_this2.callbacks.taskHandleErrorCallback) {\n              _this2.callbacks.taskHandleErrorCallback(res);\n            }\n\n            return;\n          }\n\n          _this2.$message({\n            message: _this2.$t('prompt.success'),\n            type: 'success',\n            duration: 500,\n            onClose: function onClose() {\n              _this2.visible = false;\n\n              if (_this2.callbacks.taskHandleSuccessCallback) {\n                _this2.callbacks.taskHandleSuccessCallback(res);\n              }\n            }\n          });\n        });\n      });\n    }, 1000, {\n      'leading': true,\n      'trailing': false\n    }),\n    // 通过\n    completeTask: debounce(function () {\n      var _this3 = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        if (!valid) {\n          return false;\n        }\n\n        if (!_this3.dataForm.taskId) {\n          return false;\n        }\n\n        var params = qs.stringify({\n          'taskId': _this3.dataForm.taskId,\n          'comment': _this3.dataForm.comment\n        });\n\n        _this3.$http.post('/act/task/complete?' + params).then(function (_ref2) {\n          var res = _ref2.data;\n\n          if (res.code !== 0) {\n            _this3.$message.error(res.msg);\n\n            if (_this3.callbacks.taskHandleErrorCallback) {\n              _this3.callbacks.taskHandleErrorCallback(res);\n            }\n\n            return;\n          }\n\n          _this3.$message({\n            message: _this3.$t('prompt.success'),\n            type: 'success',\n            duration: 500,\n            onClose: function onClose() {\n              _this3.visible = false;\n\n              if (_this3.callbacks.taskHandleSuccessCallback) {\n                _this3.callbacks.taskHandleSuccessCallback(res);\n              }\n            }\n          });\n        }).catch(function () {});\n      });\n    }, 1000, {\n      'leading': true,\n      'trailing': false\n    }),\n    // 终止\n    terminationTask: debounce(function () {\n      var _this4 = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        if (!valid) {\n          return false;\n        }\n\n        if (!_this4.dataForm.taskId) {\n          return false;\n        }\n\n        var task = qs.stringify({\n          taskId: _this4.dataForm.taskId,\n          comment: _this4.dataForm.comment\n        });\n\n        _this4.$http['post']('/act/task/endProcess', task).then(function (_ref3) {\n          var res = _ref3.data;\n\n          if (res.code !== 0) {\n            _this4.$message.error(res.msg);\n\n            if (_this4.callbacks.taskHandleErrorCallback) {\n              _this4.callbacks.taskHandleErrorCallback(res);\n            }\n\n            return;\n          }\n\n          _this4.$message({\n            message: _this4.$t('prompt.success'),\n            type: 'success',\n            duration: 500,\n            onClose: function onClose() {\n              _this4.visible = false;\n\n              if (_this4.callbacks.taskHandleSuccessCallback) {\n                _this4.callbacks.taskHandleSuccessCallback(res);\n              }\n            }\n          });\n        }).catch(function () {});\n      });\n    }, 1000, {\n      'leading': true,\n      'trailing': false\n    })\n  }\n};",{"version":3,"sources":["ren-task-handle.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-dialog :visible.sync=\"visible\" :title=\"handleTitle\" :close-on-click-modal=\"false\" :close-on-press-escape=\"false\">\r\n    <el-form :model=\"dataForm\" :rules=\"dataRule\" ref=\"dataForm\" @keyup.enter.native=\"dataFormSubmitHandle()\" :label-width=\"$i18n.locale === 'en-US' ? '120px' : '80px'\">\r\n      <el-form-item :label=\"$t('process.comment')\" prop=\"comment\">\r\n        <el-input type=\"textarea\" v-model=\"dataForm.comment\" :placeholder=\"$t('process.comment')\"></el-input>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template slot=\"footer\">\r\n      <el-button @click=\"visible = false\">{{ $t('cancel') }}</el-button>\r\n      <el-button type=\"primary\" @click=\"dataFormSubmitHandle()\">{{ $t('confirm') }}</el-button>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport debounce from 'lodash/debounce'\r\nimport qs from 'qs'\r\nexport default {\r\n  data () {\r\n    return {\r\n      visible: false,\r\n      handleType: '',\r\n      handleTitle: '',\r\n      dataForm: {\r\n        comment: '',\r\n        taskId: ''\r\n      },\r\n      // 回调函数\r\n      callbacks: {\r\n        taskHandleSuccessCallback: null,\r\n        taskHandleErrorCallback: null\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    dataRule () {\r\n      return {\r\n        comment: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    init () {\r\n      this.visible = true\r\n      if (this.handleType === 'complete') {\r\n        this.handleTitle = this.$t('process.completeTask')\r\n      } else if (this.handleType === 'reject') {\r\n        this.handleTitle = this.$t('process.rejectTask')\r\n      } else if (this.handleType === 'termination') {\r\n        this.handleTitle = this.$t('process.terminationTask')\r\n      }\r\n      this.$nextTick(() => {\r\n        this.$refs['dataForm'].resetFields()\r\n      })\r\n    },\r\n    // 表单提交\r\n    dataFormSubmitHandle () {\r\n      if (this.handleType === 'complete') {\r\n        this.completeTask()\r\n      } else if (this.handleType === 'reject') {\r\n        this.rejectTask()\r\n      } else if (this.handleType === 'termination') {\r\n        this.terminationTask()\r\n      }\r\n    },\r\n    // 驳回\r\n    rejectTask: debounce(function () {\r\n      this.$refs['dataForm'].validate((valid) => {\r\n        if (!valid) {\r\n          return false\r\n        }\r\n        if (!this.dataForm.taskId) {\r\n          return false\r\n        }\r\n        var params = qs.stringify({\r\n          'taskId': this.dataForm.taskId,\r\n          'comment': this.dataForm.comment\r\n        })\r\n        this.$http['post']('/act/task/backToFirst?', params).then(({ data: res }) => {\r\n          if (res.code !== 0) {\r\n            this.$message.error(res.msg)\r\n            if (this.callbacks.taskHandleErrorCallback) {\r\n              this.callbacks.taskHandleErrorCallback(res)\r\n            }\r\n            return\r\n          }\r\n          this.$message({\r\n            message: this.$t('prompt.success'),\r\n            type: 'success',\r\n            duration: 500,\r\n            onClose: () => {\r\n              this.visible = false\r\n              if (this.callbacks.taskHandleSuccessCallback) {\r\n                this.callbacks.taskHandleSuccessCallback(res)\r\n              }\r\n            }\r\n          })\r\n        })\r\n      })\r\n    }, 1000, { 'leading': true, 'trailing': false }),\r\n    // 通过\r\n    completeTask: debounce(function () {\r\n      this.$refs['dataForm'].validate((valid) => {\r\n        if (!valid) {\r\n          return false\r\n        }\r\n        if (!this.dataForm.taskId) {\r\n          return false\r\n        }\r\n        var params = qs.stringify({\r\n          'taskId': this.dataForm.taskId,\r\n          'comment': this.dataForm.comment\r\n        })\r\n        this.$http.post('/act/task/complete?' + params).then(({ data: res }) => {\r\n          if (res.code !== 0) {\r\n            this.$message.error(res.msg)\r\n            if (this.callbacks.taskHandleErrorCallback) {\r\n              this.callbacks.taskHandleErrorCallback(res)\r\n            }\r\n            return\r\n          }\r\n          this.$message({\r\n            message: this.$t('prompt.success'),\r\n            type: 'success',\r\n            duration: 500,\r\n            onClose: () => {\r\n              this.visible = false\r\n              if (this.callbacks.taskHandleSuccessCallback) {\r\n                this.callbacks.taskHandleSuccessCallback(res)\r\n              }\r\n            }\r\n          })\r\n        }).catch(() => {})\r\n      })\r\n    }, 1000, { 'leading': true, 'trailing': false }),\r\n    // 终止\r\n    terminationTask: debounce(function () {\r\n      this.$refs['dataForm'].validate((valid) => {\r\n        if (!valid) {\r\n          return false\r\n        }\r\n        if (!this.dataForm.taskId) {\r\n          return false\r\n        }\r\n        var task = qs.stringify({\r\n          taskId: this.dataForm.taskId,\r\n          comment: this.dataForm.comment\r\n        })\r\n        this.$http['post']('/act/task/endProcess', task).then(({ data: res }) => {\r\n          if (res.code !== 0) {\r\n            this.$message.error(res.msg)\r\n            if (this.callbacks.taskHandleErrorCallback) {\r\n              this.callbacks.taskHandleErrorCallback(res)\r\n            }\r\n            return\r\n          }\r\n          this.$message({\r\n            message: this.$t('prompt.success'),\r\n            type: 'success',\r\n            duration: 500,\r\n            onClose: () => {\r\n              this.visible = false\r\n              if (this.callbacks.taskHandleSuccessCallback) {\r\n                this.callbacks.taskHandleSuccessCallback(res)\r\n              }\r\n            }\r\n          })\r\n        }).catch(() => {})\r\n      })\r\n    }, 1000, { 'leading': true, 'trailing': false })\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components/ren-process-running/src"}]}