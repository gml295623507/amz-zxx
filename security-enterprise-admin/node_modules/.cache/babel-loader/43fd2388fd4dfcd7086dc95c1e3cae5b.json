{"remainingRequest":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/babel-loader/lib/index.js!/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/src/views/modules/activiti/process-initiation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/src/views/modules/activiti/process-initiation.vue","mtime":1569313608000},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport mixinViewModule from '@/mixins/view-module';\nimport Cookies from 'js-cookie';\nimport { addDynamicRoute } from '@/router';\nimport qs from 'qs';\nexport default {\n  mixins: [mixinViewModule],\n  data: function data() {\n    return {\n      mixinViewModuleOptions: {\n        getDataListURL: '/act/process/lastestPage',\n        getDataListIsPage: true,\n        deleteURL: '/act/process',\n        deleteIsBatch: true,\n        deleteIsBatchKey: 'deploymentId'\n      },\n      dataForm: {\n        processName: '',\n        key: ''\n      },\n      deployVisible: false\n    };\n  },\n  components: {},\n  methods: {\n    // 获取流程(xml/image)url地址\n    getResourceURL: function getResourceURL(id, name) {\n      var params = qs.stringify({\n        'token': Cookies.get('token'),\n        'deploymentId': id,\n        'resourceName': name\n      });\n      return \"\".concat(window.SITE_CONFIG['apiURL'], \"/act/process/resource?\").concat(params);\n    },\n    // 发起流程\n    createProcessInstance: function createProcessInstance(row) {\n      var _this = this;\n\n      this.$http.get(\"/act/process/getProcDefBizRoute/\".concat(row.id)).then(function (_ref) {\n        var res = _ref.data;\n\n        if (res.code !== 0) {\n          return _this.$message.error(res.msg);\n        }\n\n        if (!res.data || !res.data.bizRoute) {\n          return _this.$message.error(_this.$t('process.routeError'));\n        }\n\n        _this.forwardUrl(res.data, row);\n      }).catch(function () {});\n    },\n    forwardUrl: function forwardUrl(data, row) {\n      var routeParams = {\n        routeName: \"\".concat(this.$route.name, \"__instance_\").concat(data.id),\n        menuId: \"\".concat(this.$route.meta.menuId),\n        title: \"\".concat(this.$route.meta.title, \" - \").concat(row.name),\n        path: data.bizRoute,\n        params: {\n          processDefinitionId: data.procDefId,\n          processDefinitionKey: row.key,\n          processShowType: 'start'\n        }\n      };\n      addDynamicRoute(routeParams, this.$router, this.$route);\n    },\n    // 启动其他流程\n    startProcess: function startProcess(key) {\n      var _this2 = this;\n\n      var params = qs.stringify({\n        'key': key\n      });\n      this.$http.post(\"/act/running/start\", params).then(function (_ref2) {\n        var res = _ref2.data;\n\n        if (res.code !== 0) {\n          return _this2.$message.error(res.msg);\n        }\n\n        _this2.$message({\n          message: _this2.$t('prompt.success'),\n          type: 'success',\n          duration: 500,\n          onClose: function onClose() {\n            _this2.getDataList();\n          }\n        });\n      }).catch(function () {});\n    }\n  }\n};",{"version":3,"sources":["process-initiation.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-card shadow=\"never\" class=\"aui-card--fill\">\r\n    <div class=\"mod-activiti__process\">\r\n      <el-form :inline=\"true\" :model=\"dataForm\" @keyup.enter.native=\"getDataList()\">\r\n        <el-form-item>\r\n          <el-input v-model=\"dataForm.processName\" :placeholder=\"$t('process.name')\" clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-input v-model=\"dataForm.key\" :placeholder=\"$t('process.key')\" clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"getDataList()\">{{ $t('query') }}</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-table\r\n        v-loading=\"dataListLoading\"\r\n        :data=\"dataList\"\r\n        border\r\n        @selection-change=\"dataListSelectionChangeHandle\"\r\n        @sort-change=\"dataListSortChangeHandle\"\r\n        style=\"width: 100%;\">\r\n        <el-table-column type=\"selection\" header-align=\"center\" align=\"center\" width=\"50\"></el-table-column>\r\n        <el-table-column prop=\"id\" :label=\"$t('process.id')\" header-align=\"center\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"deploymentId\" :label=\"$t('process.deploymentId')\" header-align=\"center\" align=\"center\" width=\"80\"></el-table-column>\r\n        <el-table-column prop=\"name\" :label=\"$t('process.name')\" header-align=\"center\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"key\" :label=\"$t('process.key')\" header-align=\"center\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"version\" :label=\"$t('process.version')\" header-align=\"center\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"resourceName\" :label=\"$t('process.resourceName')\" header-align=\"center\" align=\"center\" :show-overflow-tooltip=\"true\" width=\"100\">\r\n          <template slot-scope=\"scope\">\r\n            <a :href=\"getResourceURL(scope.row.deploymentId, scope.row.resourceName)\" target=\"_blank\">{{ scope.row.resourceName }}</a>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"diagramResourceName\" :label=\"$t('process.diagramResourceName')\" header-align=\"center\" align=\"center\" :show-overflow-tooltip=\"true\" width=\"100\">\r\n          <template slot-scope=\"scope\">\r\n            <a :href=\"getResourceURL(scope.row.deploymentId, scope.row.diagramResourceName)\" target=\"_blank\">{{ scope.row.diagramResourceName }}</a>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"deploymentTime\" :label=\"$t('process.deploymentTime')\" header-align=\"center\" align=\"center\" width=\"180\"></el-table-column>\r\n        <el-table-column :label=\"$t('handle')\" fixed=\"right\" header-align=\"center\" align=\"center\" width=\"150\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button type=\"text\" size=\"small\" @click=\"createProcessInstance(scope.row)\">{{ $t('process.createInstance') }}</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <el-pagination\r\n        :current-page=\"page\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        :page-size=\"limit\"\r\n        :total=\"total\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        @size-change=\"pageSizeChangeHandle\"\r\n        @current-change=\"pageCurrentChangeHandle\">\r\n      </el-pagination>\r\n      <add-or-update v-if=\"addOrUpdateVisible\" ref=\"addOrUpdate\" @refreshDataList=\"getDataList\"></add-or-update>\r\n    </div>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nimport mixinViewModule from '@/mixins/view-module'\r\nimport Cookies from 'js-cookie'\r\nimport { addDynamicRoute } from '@/router'\r\nimport qs from 'qs'\r\nexport default {\r\n  mixins: [mixinViewModule],\r\n  data () {\r\n    return {\r\n      mixinViewModuleOptions: {\r\n        getDataListURL: '/act/process/lastestPage',\r\n        getDataListIsPage: true,\r\n        deleteURL: '/act/process',\r\n        deleteIsBatch: true,\r\n        deleteIsBatchKey: 'deploymentId'\r\n      },\r\n      dataForm: {\r\n        processName: '',\r\n        key: ''\r\n      },\r\n      deployVisible: false\r\n    }\r\n  },\r\n  components: {\r\n  },\r\n  methods: {\r\n    // 获取流程(xml/image)url地址\r\n    getResourceURL (id, name) {\r\n      var params = qs.stringify({\r\n        'token': Cookies.get('token'),\r\n        'deploymentId': id,\r\n        'resourceName': name\r\n      })\r\n      return `${window.SITE_CONFIG['apiURL']}/act/process/resource?${params}`\r\n    },\r\n    // 发起流程\r\n    createProcessInstance (row) {\r\n      this.$http.get(`/act/process/getProcDefBizRoute/${row.id}`).then(({ data: res }) => {\r\n        if (res.code !== 0) {\r\n          return this.$message.error(res.msg)\r\n        }\r\n        if (!res.data || !res.data.bizRoute) {\r\n          return this.$message.error(this.$t('process.routeError'))\r\n        }\r\n        this.forwardUrl(res.data, row)\r\n      }).catch(() => {})\r\n    },\r\n    forwardUrl (data, row) {\r\n      var routeParams = {\r\n        routeName: `${this.$route.name}__instance_${data.id}`,\r\n        menuId: `${this.$route.meta.menuId}`,\r\n        title: `${this.$route.meta.title} - ${row.name}`,\r\n        path: data.bizRoute,\r\n        params: {\r\n          processDefinitionId: data.procDefId,\r\n          processDefinitionKey: row.key,\r\n          processShowType: 'start'\r\n        }\r\n      }\r\n      addDynamicRoute(routeParams, this.$router, this.$route)\r\n    },\r\n    // 启动其他流程\r\n    startProcess (key) {\r\n      var params = qs.stringify({\r\n        'key': key\r\n      })\r\n      this.$http.post(`/act/running/start`, params).then(({ data: res }) => {\r\n        if (res.code !== 0) {\r\n          return this.$message.error(res.msg)\r\n        }\r\n        this.$message({\r\n          message: this.$t('prompt.success'),\r\n          type: 'success',\r\n          duration: 500,\r\n          onClose: () => {\r\n            this.getDataList()\r\n          }\r\n        })\r\n      }).catch(() => {})\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/modules/activiti"}]}