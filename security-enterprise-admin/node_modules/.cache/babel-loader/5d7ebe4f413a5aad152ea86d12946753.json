{"remainingRequest":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/babel-loader/lib/index.js!/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/src/views/main-navbar-update-password.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/src/views/main-navbar-update-password.vue","mtime":1569313608000},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":1593769583426},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/babel-loader/lib/index.js","mtime":1593769580300},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":1593769583426},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/vue-loader/lib/index.js","mtime":1593769583804}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport debounce from 'lodash/debounce';\nimport { clearLoginInfo } from '@/utils';\nexport default {\n  data: function data() {\n    return {\n      visible: false,\n      dataForm: {\n        password: '',\n        newPassword: '',\n        confirmPassword: ''\n      }\n    };\n  },\n  computed: {\n    dataRule: function dataRule() {\n      var _this = this;\n\n      var validateConfirmPassword = function validateConfirmPassword(rule, value, callback) {\n        if (_this.dataForm.newPassword !== value) {\n          return callback(new Error(_this.$t('updatePassword.validate.confirmPassword')));\n        }\n\n        callback();\n      };\n\n      return {\n        password: [{\n          required: true,\n          message: this.$t('validate.required'),\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          message: this.$t('validate.required'),\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          required: true,\n          message: this.$t('validate.required'),\n          trigger: 'blur'\n        }, {\n          validator: validateConfirmPassword,\n          trigger: 'blur'\n        }]\n      };\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this2 = this;\n\n      this.visible = true;\n      this.$nextTick(function () {\n        _this2.$refs['dataForm'].resetFields();\n      });\n    },\n    // 表单提交\n    dataFormSubmitHandle: debounce(function () {\n      var _this3 = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        if (!valid) {\n          return false;\n        }\n\n        _this3.$http.put('/sys/user/password', _this3.dataForm).then(function (_ref) {\n          var res = _ref.data;\n\n          if (res.code !== 0) {\n            return _this3.$message.error(res.msg);\n          }\n\n          _this3.$message({\n            message: _this3.$t('prompt.success'),\n            type: 'success',\n            duration: 500,\n            onClose: function onClose() {\n              _this3.visible = false;\n              clearLoginInfo();\n\n              _this3.$router.replace({\n                name: 'login'\n              });\n            }\n          });\n        }).catch(function () {});\n      });\n    }, 1000, {\n      'leading': true,\n      'trailing': false\n    })\n  }\n};",{"version":3,"sources":["main-navbar-update-password.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAA,QAAA,MAAA,iBAAA;AACA,SAAA,cAAA,QAAA,SAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,WAAA,EAAA,EAFA;AAGA,QAAA,eAAA,EAAA;AAHA;AAFA,KAAA;AAQA,GAVA;AAWA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA,UAAA,uBAAA,GAAA,SAAA,uBAAA,CAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA;AACA,YAAA,KAAA,CAAA,QAAA,CAAA,WAAA,KAAA,KAAA,EAAA;AACA,iBAAA,QAAA,CAAA,IAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,yCAAA,CAAA,CAAA,CAAA;AACA;;AACA,QAAA,QAAA;AACA,OALA;;AAMA,aAAA;AACA,QAAA,QAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,KAAA,EAAA,CAAA,mBAAA,CAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,CADA;AAIA,QAAA,WAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,KAAA,EAAA,CAAA,mBAAA,CAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,CAJA;AAOA,QAAA,eAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,KAAA,EAAA,CAAA,mBAAA,CAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,SAAA,EAAA,uBAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAFA;AAPA,OAAA;AAYA;AApBA,GAXA;AAiCA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AAAA;;AACA,WAAA,OAAA,GAAA,IAAA;AACA,WAAA,SAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,UAAA,EAAA,WAAA;AACA,OAFA;AAGA,KANA;AAOA;AACA,IAAA,oBAAA,EAAA,QAAA,CAAA,YAAA;AAAA;;AACA,WAAA,KAAA,CAAA,UAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,CAAA,KAAA,EAAA;AACA,iBAAA,KAAA;AACA;;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,oBAAA,EAAA,MAAA,CAAA,QAAA,EAAA,IAAA,CAAA,gBAAA;AAAA,cAAA,GAAA,QAAA,IAAA;;AACA,cAAA,GAAA,CAAA,IAAA,KAAA,CAAA,EAAA;AACA,mBAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AACA;;AACA,UAAA,MAAA,CAAA,QAAA,CAAA;AACA,YAAA,OAAA,EAAA,MAAA,CAAA,EAAA,CAAA,gBAAA,CADA;AAEA,YAAA,IAAA,EAAA,SAFA;AAGA,YAAA,QAAA,EAAA,GAHA;AAIA,YAAA,OAAA,EAAA,mBAAA;AACA,cAAA,MAAA,CAAA,OAAA,GAAA,KAAA;AACA,cAAA,cAAA;;AACA,cAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA;AAAA,gBAAA,IAAA,EAAA;AAAA,eAAA;AACA;AARA,WAAA;AAUA,SAdA,EAcA,KAdA,CAcA,YAAA,CAAA,CAdA;AAeA,OAnBA;AAoBA,KArBA,EAqBA,IArBA,EAqBA;AAAA,iBAAA,IAAA;AAAA,kBAAA;AAAA,KArBA;AARA;AAjCA,CAAA","sourcesContent":["<template>\r\n  <el-dialog\r\n    :visible.sync=\"visible\"\r\n    :title=\"$t('updatePassword.title')\"\r\n    :close-on-click-modal=\"false\"\r\n    :close-on-press-escape=\"false\"\r\n    :append-to-body=\"true\">\r\n    <el-form :model=\"dataForm\" :rules=\"dataRule\" ref=\"dataForm\" @keyup.enter.native=\"dataFormSubmitHandle()\" label-width=\"120px\">\r\n      <el-form-item :label=\"$t('updatePassword.username')\">\r\n        <span>{{ $store.state.user.name }}</span>\r\n      </el-form-item>\r\n      <el-form-item prop=\"password\" :label=\"$t('updatePassword.password')\">\r\n        <el-input v-model=\"dataForm.password\" type=\"password\" :placeholder=\"$t('updatePassword.password')\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"newPassword\" :label=\"$t('updatePassword.newPassword')\">\r\n        <el-input v-model=\"dataForm.newPassword\" type=\"password\" :placeholder=\"$t('updatePassword.newPassword')\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"confirmPassword\" :label=\"$t('updatePassword.confirmPassword')\">\r\n        <el-input v-model=\"dataForm.confirmPassword\" type=\"password\" :placeholder=\"$t('updatePassword.confirmPassword')\"></el-input>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template slot=\"footer\">\r\n      <el-button @click=\"visible = false\">{{ $t('cancel') }}</el-button>\r\n      <el-button type=\"primary\" @click=\"dataFormSubmitHandle()\">{{ $t('confirm') }}</el-button>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport debounce from 'lodash/debounce'\r\nimport { clearLoginInfo } from '@/utils'\r\nexport default {\r\n  data () {\r\n    return {\r\n      visible: false,\r\n      dataForm: {\r\n        password: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    dataRule () {\r\n      var validateConfirmPassword = (rule, value, callback) => {\r\n        if (this.dataForm.newPassword !== value) {\r\n          return callback(new Error(this.$t('updatePassword.validate.confirmPassword')))\r\n        }\r\n        callback()\r\n      }\r\n      return {\r\n        password: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ],\r\n        newPassword: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ],\r\n        confirmPassword: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' },\r\n          { validator: validateConfirmPassword, trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    init () {\r\n      this.visible = true\r\n      this.$nextTick(() => {\r\n        this.$refs['dataForm'].resetFields()\r\n      })\r\n    },\r\n    // 表单提交\r\n    dataFormSubmitHandle: debounce(function () {\r\n      this.$refs['dataForm'].validate((valid) => {\r\n        if (!valid) {\r\n          return false\r\n        }\r\n        this.$http.put('/sys/user/password', this.dataForm).then(({ data: res }) => {\r\n          if (res.code !== 0) {\r\n            return this.$message.error(res.msg)\r\n          }\r\n          this.$message({\r\n            message: this.$t('prompt.success'),\r\n            type: 'success',\r\n            duration: 500,\r\n            onClose: () => {\r\n              this.visible = false\r\n              clearLoginInfo()\r\n              this.$router.replace({ name: 'login' })\r\n            }\r\n          })\r\n        }).catch(() => {})\r\n      })\r\n    }, 1000, { 'leading': true, 'trailing': false })\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views"}]}