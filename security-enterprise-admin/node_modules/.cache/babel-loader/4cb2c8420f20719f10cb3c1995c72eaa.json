{"remainingRequest":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/babel-loader/lib/index.js!/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/src/views/modules/activiti/demo/correction-add-or-update.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/src/views/modules/activiti/demo/correction-add-or-update.vue","mtime":1569313608000},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":1593769583426},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/babel-loader/lib/index.js","mtime":1593769580300},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":1593769583426},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/vue-loader/lib/index.js","mtime":1593769583804}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 引入工作流公共方法\nimport processModule from '@/mixins/process-module';\nexport default {\n  // 注入公共方法\n  mixins: [processModule],\n  data: function data() {\n    return {\n      // 是否显示流程启动组件\n      processVisible: true,\n      visible: false,\n      dataForm: {\n        id: '',\n        applyPost: '',\n        entryDate: '',\n        correctionDate: '',\n        workContent: '',\n        achievement: '',\n        creator: '',\n        createDate: ''\n      }\n    };\n  },\n  computed: {\n    dataRule: function dataRule() {\n      return {\n        applyPost: [{\n          required: true,\n          message: this.$t('validate.required'),\n          trigger: 'blur'\n        }],\n        entryDate: [{\n          required: true,\n          message: this.$t('validate.required'),\n          trigger: 'blur'\n        }],\n        correctionDate: [{\n          required: true,\n          message: this.$t('validate.required'),\n          trigger: 'blur'\n        }],\n        workContent: [{\n          required: true,\n          message: this.$t('validate.required'),\n          trigger: 'blur'\n        }],\n        achievement: [{\n          required: true,\n          message: this.$t('validate.required'),\n          trigger: 'blur'\n        }],\n        createTime: [{\n          required: true,\n          message: this.$t('validate.required'),\n          trigger: 'blur'\n        }]\n      };\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      this.visible = true;\n      this.$nextTick(function () {\n        _this.$refs['dataForm'].resetFields();\n\n        if (_this.dataForm.id) {\n          _this.getInfo();\n        } // 将业务组件对象赋值给流程（回调时需要用到）\n\n\n        _this.$refs.renProcessStart.rootObj = _this; // 配置回调函数\n\n        _this.$refs.renProcessStart.callbacks = {\n          startProcessSuccessCallback: _this.closeCurrentDialog,\n          startProcessErrorCallback: _this.startProcessErrorCallback,\n          formSaveSuccessCallback: null,\n          formSaveErrorCallback: null\n        }; // 配置流程定义KEY\n\n        _this.$refs.renProcessStart.dataForm.processDefinitionKey = 'correctionprocess';\n      });\n    },\n    // 获取信息\n    getInfo: function getInfo() {\n      var _this2 = this;\n\n      this.$http.get(\"/act/demo/correction/\".concat(this.dataForm.id)).then(function (_ref) {\n        var res = _ref.data;\n\n        if (res.code !== 0) {\n          return _this2.$message.error(res.msg);\n        }\n\n        _this2.dataForm = _objectSpread(_objectSpread({}, _this2.dataForm), res.data);\n      }).catch(function () {});\n    },\n    closeCurrentDialog: function closeCurrentDialog() {\n      this.visible = false;\n      this.$emit('refreshDataList');\n    }\n  }\n};",{"version":3,"sources":["correction-add-or-update.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-dialog :visible.sync=\"visible\" :title=\"!dataForm.id ? $t('add') : $t('update')\" :close-on-click-modal=\"false\" :close-on-press-escape=\"false\">\r\n    <el-form :model=\"dataForm\" :rules=\"dataRule\" ref=\"dataForm\" @keyup.enter.native=\"dataFormSubmitHandle()\" :label-width=\"$i18n.locale === 'en-US' ? '120px' : '80px'\">\r\n      <el-form-item :label=\"$t('correction.post')\" prop=\"applyPost\">\r\n        <el-input v-model=\"dataForm.applyPost\" :placeholder=\"$t('correction.post')\"></el-input>\r\n      </el-form-item>\r\n      <el-row :gutter=\"40\">\r\n        <el-col :span=\"12\">\r\n          <el-form-item :label=\"$t('correction.entryDate')\" prop=\"entryDate\">\r\n            <el-date-picker v-model=\"dataForm.entryDate\" value-format=\"yyyy-MM-dd\" :placeholder=\"$t('correction.entryDate')\" style=\"width: 100%\"></el-date-picker>\r\n          </el-form-item>\r\n        </el-col>\r\n        <el-col :span=\"12\">\r\n          <el-form-item :label=\"$t('correction.correctionDate')\" prop=\"correctionDate\">\r\n            <el-date-picker v-model=\"dataForm.correctionDate\" value-format=\"yyyy-MM-dd\" :placeholder=\"$t('correction.correctionDate')\" style=\"width: 100%\"></el-date-picker>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n      <el-form-item :label=\"$t('correction.workContent')\" prop=\"workContent\">\r\n        <el-input type=\"textarea\" v-model=\"dataForm.workContent\" :placeholder=\"$t('correction.workContent')\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('correction.achievement')\" prop=\"achievement\">\r\n        <el-input type=\"textarea\" v-model=\"dataForm.achievement\" :placeholder=\"$t('correction.achievement')\"></el-input>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template slot=\"footer\">\r\n      <el-button @click=\"visible = false\">{{ $t('cancel') }}</el-button>\r\n      <!--  流程启动组件  -->\r\n      <ren-process-start v-if=\"processVisible\" updateInstanceIdUrl=\"/act/demo/correction/updateInstanceId\" saveFormUrl=\"/act/demo/correction\" dataFormName=\"dataForm\" ref=\"renProcessStart\" ></ren-process-start>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\n// 引入工作流公共方法\r\nimport processModule from '@/mixins/process-module'\r\nexport default {\r\n  // 注入公共方法\r\n  mixins: [processModule],\r\n  data () {\r\n    return {\r\n      // 是否显示流程启动组件\r\n      processVisible: true,\r\n      visible: false,\r\n      dataForm: {\r\n        id: '',\r\n        applyPost: '',\r\n        entryDate: '',\r\n        correctionDate: '',\r\n        workContent: '',\r\n        achievement: '',\r\n        creator: '',\r\n        createDate: ''\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    dataRule () {\r\n      return {\r\n        applyPost: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ],\r\n        entryDate: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ],\r\n        correctionDate: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ],\r\n        workContent: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ],\r\n        achievement: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ],\r\n        createTime: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    init () {\r\n      this.visible = true\r\n      this.$nextTick(() => {\r\n        this.$refs['dataForm'].resetFields()\r\n        if (this.dataForm.id) {\r\n          this.getInfo()\r\n        }\r\n        // 将业务组件对象赋值给流程（回调时需要用到）\r\n        this.$refs.renProcessStart.rootObj = this\r\n        // 配置回调函数\r\n        this.$refs.renProcessStart.callbacks = {\r\n          startProcessSuccessCallback: this.closeCurrentDialog,\r\n          startProcessErrorCallback: this.startProcessErrorCallback,\r\n          formSaveSuccessCallback: null,\r\n          formSaveErrorCallback: null\r\n        }\r\n        // 配置流程定义KEY\r\n        this.$refs.renProcessStart.dataForm.processDefinitionKey = 'correctionprocess'\r\n      })\r\n    },\r\n    // 获取信息\r\n    getInfo () {\r\n      this.$http.get(`/act/demo/correction/${this.dataForm.id}`).then(({ data: res }) => {\r\n        if (res.code !== 0) {\r\n          return this.$message.error(res.msg)\r\n        }\r\n        this.dataForm = {\r\n          ...this.dataForm,\r\n          ...res.data\r\n        }\r\n      }).catch(() => {})\r\n    },\r\n    closeCurrentDialog () {\r\n      this.visible = false\r\n      this.$emit('refreshDataList')\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/modules/activiti/demo"}]}