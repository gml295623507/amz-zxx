{"remainingRequest":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/babel-loader/lib/index.js!/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/src/mixins/process-module.js","dependencies":[{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/src/mixins/process-module.js","mtime":1569313608000},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/95h/95h-Projects/vue-renren\\u540E\\u53F0\\u7BA1\\u7406\\u7CFB\\u7EDF\\u6A21\\u677F/security-enterprise-admin/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { addDynamicRoute } from '@/router';\nexport default {\n  data: function data() {\n    return {\n      processVisible: false\n    };\n  },\n  methods: {\n    // 初始化流程配置(集成发起流程和任务处理功能)\n    initProcessMultiple: function initProcessMultiple(callbacks) {\n      var _this = this;\n\n      // showType 用于区分流程启动（start）、任务处理(taskHandle)以及查看详情(null)\n      // 流程启动显示的是“流程启动”按钮，任务处理显示的是“通过、委托、回退、驳回、终止”按钮，查看详情都不显示\n      var showType = this.$route.params.processShowType;\n      this.processVisible = true;\n      this.$nextTick(function () {\n        if (_this.$route.params.processDefinitionKey) {\n          _this.$refs.renProcessMultiple.dataForm.processDefinitionKey = _this.$route.params.processDefinitionKey;\n        }\n\n        if (_this.$route.params.taskId) {\n          _this.$refs.renProcessMultiple.dataForm.taskId = _this.$route.params.taskId;\n        }\n\n        if (_this.$route.params.processInstanceId) {\n          _this.$refs.renProcessMultiple.dataForm.processInstanceId = _this.$route.params.processInstanceId;\n        }\n\n        _this.$refs.renProcessMultiple.dataForm.businessKey = _this.$route.params.businessKey;\n        _this.$refs.renProcessMultiple.showType = showType;\n        _this.$refs.renProcessMultiple.parentObj = _this;\n        _this.$refs.renProcessMultiple.callbacks = callbacks;\n      });\n    },\n    // 关闭当前窗口\n    closeCurrentTab: function closeCurrentTab(data) {\n      var tabName = this.$store.state.contentTabsActiveName;\n      this.$store.state.contentTabs = this.$store.state.contentTabs.filter(function (item) {\n        return item.name !== tabName;\n      });\n\n      if (this.$store.state.contentTabs.length <= 0) {\n        this.$store.state.sidebarMenuActiveName = this.$store.state.contentTabsActiveName = 'home';\n        return false;\n      }\n\n      if (tabName === this.$store.state.contentTabsActiveName) {\n        this.$router.push({\n          name: this.$store.state.contentTabs[this.$store.state.contentTabs.length - 1].name\n        });\n      }\n    },\n    // 获取流程定义的表单路由配置信息\n    getProcDefRouteSet: function getProcDefRouteSet(data, callback) {\n      var _this2 = this;\n\n      this.$http.get(\"/act/process/getProcDefBizRoute/\".concat(data.processDefinitionId)).then(function (_ref) {\n        var res = _ref.data;\n\n        if (res.code !== 0) {\n          return _this2.$message.error(res.msg);\n        }\n\n        if (!res.data || !res.data.bizRoute) {\n          return _this2.$message.error(_this2.$t('process.routeError'));\n        }\n\n        var param = _objectSpread({}, data, {}, res.data);\n\n        callback(param);\n      }).catch(function () {});\n    },\n    getProcDefBizRouteAndProcessInstance: function getProcDefBizRouteAndProcessInstance(params, callback) {\n      var _this3 = this;\n\n      this.$http.get(\"/act/process/getProcDefBizRouteAndProcessInstance\", {\n        params: params\n      }).then(function (_ref2) {\n        var res = _ref2.data;\n\n        if (res.code !== 0) {\n          return _this3.$message.error(res.msg);\n        }\n\n        if (!res.data || !res.data.bizRoute) {\n          return _this3.$message.error(_this3.$t('process.routeError'));\n        }\n\n        var param = _objectSpread({}, params, {}, res.data);\n\n        callback(param);\n      }).catch(function () {});\n    },\n    // 根据流程定义KEY获取最新的表单路由配置信息\n    getLatestProcDefRouteSet: function getLatestProcDefRouteSet(procDefKey, callback) {\n      var _this4 = this;\n\n      this.$http.get(\"/act/process/getLatestProcDefBizRoute\", {\n        params: {\n          procDefKey: procDefKey\n        }\n      }).then(function (_ref3) {\n        var res = _ref3.data;\n\n        if (res.code !== 0) {\n          return _this4.$message.error(res.msg);\n        }\n\n        if (!res.data || !res.data.bizRoute) {\n          return _this4.$message.error(_this4.$t('process.routeError'));\n        }\n\n        var param = _objectSpread({\n          procDefKey: procDefKey\n        }, res.data);\n\n        callback(param);\n      }).catch(function () {});\n    },\n    // 查看流程图\n    forwardDetail: function forwardDetail(data) {\n      var routeParams = {\n        routeName: \"\".concat(this.$route.name, \"__detail_\").concat(data.processInstanceId),\n        menuId: \"\".concat(this.$route.meta.menuId),\n        title: \"\".concat(this.$route.meta.title, \" - \").concat(data.processDefinitionName),\n        path: data.bizRoute,\n        params: {\n          processInstanceId: data.processInstanceId,\n          businessKey: data.businessKey\n        }\n      };\n      addDynamicRoute(routeParams, this.$router);\n    },\n    // 子级 查看流程图\n    forwardTaskDetail: function forwardTaskDetail(data) {\n      var routeParams = {\n        routeName: \"\".concat(this.$route.name, \"__detail_\").concat(data.taskId),\n        menuId: \"\".concat(this.$route.meta.menuId),\n        title: \"\".concat(this.$route.meta.title, \" - \").concat(data.taskName),\n        path: data.bizRoute,\n        params: {\n          taskId: data.taskId,\n          processInstanceId: data.processInstanceId,\n          businessKey: data.businessKey\n        }\n      };\n      addDynamicRoute(routeParams, this.$router);\n    },\n    forwardHandleUrl: function forwardHandleUrl(data) {\n      var routeParams = {\n        routeName: \"\".concat(this.$route.name, \"__handle_\").concat(data.taskId),\n        menuId: \"\".concat(this.$route.meta.menuId),\n        title: \"\".concat(this.$route.meta.title, \" - \").concat(data.taskName),\n        path: data.bizRoute,\n        params: {\n          taskId: data.taskId,\n          processInstanceId: data.processInstanceId,\n          processShowType: 'taskHandle',\n          businessKey: data.businessKey\n        }\n      };\n      addDynamicRoute(routeParams, this.$router);\n    }\n  }\n};",{"version":3,"sources":["/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/src/mixins/process-module.js"],"names":["addDynamicRoute","data","processVisible","methods","initProcessMultiple","callbacks","showType","$route","params","processShowType","$nextTick","processDefinitionKey","$refs","renProcessMultiple","dataForm","taskId","processInstanceId","businessKey","parentObj","closeCurrentTab","tabName","$store","state","contentTabsActiveName","contentTabs","filter","item","name","length","sidebarMenuActiveName","$router","push","getProcDefRouteSet","callback","$http","get","processDefinitionId","then","res","code","$message","error","msg","bizRoute","$t","param","catch","getProcDefBizRouteAndProcessInstance","getLatestProcDefRouteSet","procDefKey","forwardDetail","routeParams","routeName","menuId","meta","title","processDefinitionName","path","forwardTaskDetail","taskName","forwardHandleUrl"],"mappings":"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","sourcesContent":["import { addDynamicRoute } from '@/router'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      processVisible: false\r\n    }\r\n  },\r\n  methods: {\r\n    // 初始化流程配置(集成发起流程和任务处理功能)\r\n    initProcessMultiple (callbacks) {\r\n      // showType 用于区分流程启动（start）、任务处理(taskHandle)以及查看详情(null)\r\n      // 流程启动显示的是“流程启动”按钮，任务处理显示的是“通过、委托、回退、驳回、终止”按钮，查看详情都不显示\r\n      var showType = this.$route.params.processShowType\r\n      this.processVisible = true\r\n      this.$nextTick(() => {\r\n        if (this.$route.params.processDefinitionKey) {\r\n          this.$refs.renProcessMultiple.dataForm.processDefinitionKey = this.$route.params.processDefinitionKey\r\n        }\r\n        if (this.$route.params.taskId) {\r\n          this.$refs.renProcessMultiple.dataForm.taskId = this.$route.params.taskId\r\n        }\r\n        if (this.$route.params.processInstanceId) {\r\n          this.$refs.renProcessMultiple.dataForm.processInstanceId = this.$route.params.processInstanceId\r\n        }\r\n        this.$refs.renProcessMultiple.dataForm.businessKey = this.$route.params.businessKey\r\n        this.$refs.renProcessMultiple.showType = showType\r\n        this.$refs.renProcessMultiple.parentObj = this\r\n        this.$refs.renProcessMultiple.callbacks = callbacks\r\n      })\r\n    },\r\n    // 关闭当前窗口\r\n    closeCurrentTab (data) {\r\n      var tabName = this.$store.state.contentTabsActiveName\r\n      this.$store.state.contentTabs = this.$store.state.contentTabs.filter(item => item.name !== tabName)\r\n      if (this.$store.state.contentTabs.length <= 0) {\r\n        this.$store.state.sidebarMenuActiveName = this.$store.state.contentTabsActiveName = 'home'\r\n        return false\r\n      }\r\n      if (tabName === this.$store.state.contentTabsActiveName) {\r\n        this.$router.push({ name: this.$store.state.contentTabs[this.$store.state.contentTabs.length - 1].name })\r\n      }\r\n    },\r\n    // 获取流程定义的表单路由配置信息\r\n    getProcDefRouteSet (data, callback) {\r\n      this.$http.get(`/act/process/getProcDefBizRoute/${data.processDefinitionId}`).then(({ data: res }) => {\r\n        if (res.code !== 0) {\r\n          return this.$message.error(res.msg)\r\n        }\r\n        if (!res.data || !res.data.bizRoute) {\r\n          return this.$message.error(this.$t('process.routeError'))\r\n        }\r\n        var param = {\r\n          ...data,\r\n          ...res.data\r\n        }\r\n        callback(param)\r\n      }).catch(() => {})\r\n    },\r\n    getProcDefBizRouteAndProcessInstance (params, callback) {\r\n      this.$http.get(`/act/process/getProcDefBizRouteAndProcessInstance`, {\r\n        params: params\r\n      }).then(({ data: res }) => {\r\n        if (res.code !== 0) {\r\n          return this.$message.error(res.msg)\r\n        }\r\n        if (!res.data || !res.data.bizRoute) {\r\n          return this.$message.error(this.$t('process.routeError'))\r\n        }\r\n        var param = {\r\n          ...params,\r\n          ...res.data\r\n        }\r\n        callback(param)\r\n      }).catch(() => {})\r\n    },\r\n    // 根据流程定义KEY获取最新的表单路由配置信息\r\n    getLatestProcDefRouteSet (procDefKey, callback) {\r\n      this.$http.get(`/act/process/getLatestProcDefBizRoute`, {\r\n        params: {\r\n          procDefKey: procDefKey\r\n        }\r\n      }).then(({ data: res }) => {\r\n        if (res.code !== 0) {\r\n          return this.$message.error(res.msg)\r\n        }\r\n        if (!res.data || !res.data.bizRoute) {\r\n          return this.$message.error(this.$t('process.routeError'))\r\n        }\r\n        var param = {\r\n          procDefKey: procDefKey,\r\n          ...res.data\r\n        }\r\n        callback(param)\r\n      }).catch(() => {})\r\n    },\r\n    // 查看流程图\r\n    forwardDetail (data) {\r\n      var routeParams = {\r\n        routeName: `${this.$route.name}__detail_${data.processInstanceId}`,\r\n        menuId: `${this.$route.meta.menuId}`,\r\n        title: `${this.$route.meta.title} - ${data.processDefinitionName}`,\r\n        path: data.bizRoute,\r\n        params: {\r\n          processInstanceId: data.processInstanceId,\r\n          businessKey: data.businessKey\r\n        }\r\n      }\r\n      addDynamicRoute(routeParams, this.$router)\r\n    },\r\n    // 子级 查看流程图\r\n    forwardTaskDetail (data) {\r\n      var routeParams = {\r\n        routeName: `${this.$route.name}__detail_${data.taskId}`,\r\n        menuId: `${this.$route.meta.menuId}`,\r\n        title: `${this.$route.meta.title} - ${data.taskName}`,\r\n        path: data.bizRoute,\r\n        params: {\r\n          taskId: data.taskId,\r\n          processInstanceId: data.processInstanceId,\r\n          businessKey: data.businessKey\r\n        }\r\n      }\r\n      addDynamicRoute(routeParams, this.$router)\r\n    },\r\n    forwardHandleUrl (data) {\r\n      var routeParams = {\r\n        routeName: `${this.$route.name}__handle_${data.taskId}`,\r\n        menuId: `${this.$route.meta.menuId}`,\r\n        title: `${this.$route.meta.title} - ${data.taskName}`,\r\n        path: data.bizRoute,\r\n        params: {\r\n          taskId: data.taskId,\r\n          processInstanceId: data.processInstanceId,\r\n          processShowType: 'taskHandle',\r\n          businessKey: data.businessKey\r\n        }\r\n      }\r\n      addDynamicRoute(routeParams, this.$router)\r\n    }\r\n  }\r\n}\r\n"]}]}