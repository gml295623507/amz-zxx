{"remainingRequest":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/babel-loader/lib/index.js!/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/src/components/ren-process-running/src/ren-task-entrust.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/src/components/ren-process-running/src/ren-task-entrust.vue","mtime":1569313608000},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":1593769583426},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/babel-loader/lib/index.js","mtime":1593769580300},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":1593769583426},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/vue-loader/lib/index.js","mtime":1593769583804}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SelectUser from \"./select-user\";\nimport qs from 'qs';\nexport default {\n  data: function data() {\n    return {\n      visible: false,\n      selectUserVisible: false,\n      dataForm: {\n        id: '',\n        entrustUserId: '',\n        entrustUserName: '',\n        taskId: ''\n      },\n      // 回调函数\n      callbacks: {\n        taskHandleSuccessCallback: null,\n        taskHandleErrorCallback: null\n      }\n    };\n  },\n  computed: {\n    dataRule: function dataRule() {\n      return {\n        entrustUserName: [{\n          required: true,\n          message: this.$t('validate.required'),\n          trigger: 'blur'\n        }]\n      };\n    }\n  },\n  components: {\n    SelectUser: SelectUser\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      this.visible = true;\n      this.$nextTick(function () {\n        _this.$refs['dataForm'].resetFields();\n      });\n    },\n    // 委托\n    entrustTask: function entrustTask() {\n      var _this2 = this;\n\n      if (!this.dataForm.entrustUserId) {\n        this.$message.error(this.$t('process.entrustError'));\n        return;\n      }\n\n      var task = qs.stringify({\n        taskId: this.dataForm.taskId,\n        assignee: this.dataForm.entrustUserId\n      });\n      this.$http['post']('/act/task/entrust', task).then(function (_ref) {\n        var res = _ref.data;\n\n        if (res.code !== 0) {\n          _this2.$message.error(res.msg);\n\n          if (_this2.callbacks.taskHandleErrorCallback) {\n            _this2.callbacks.taskHandleErrorCallback(res);\n          }\n\n          return;\n        }\n\n        _this2.$message({\n          message: _this2.$t('prompt.success'),\n          type: 'success',\n          duration: 500,\n          onClose: function onClose() {\n            _this2.visible = false;\n\n            if (_this2.callbacks.taskHandleSuccessCallback) {\n              _this2.callbacks.taskHandleSuccessCallback(res);\n            }\n          }\n        });\n      }).catch(function () {});\n    },\n    selectUserInfo: function selectUserInfo() {\n      var _this3 = this;\n\n      this.selectUserVisible = true;\n      this.$nextTick(function () {\n        _this3.$refs.selectUser.dataForm.id = '';\n\n        _this3.$refs.selectUser.init(_this3.setUserInfo);\n      });\n    },\n    setUserInfo: function setUserInfo(userInfo) {\n      this.dataForm.entrustUserId = userInfo.id;\n      this.dataForm.entrustUserName = userInfo.realName;\n    }\n  }\n};",{"version":3,"sources":["ren-task-entrust.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-dialog :visible.sync=\"visible\" :title=\"$t('process.entrustTask')\" :close-on-click-modal=\"false\" :close-on-press-escape=\"false\">\r\n    <el-form :model=\"dataForm\" :rules=\"dataRule\" ref=\"dataForm\" @keyup.enter.native=\"dataFormSubmitHandle()\" :label-width=\"$i18n.locale === 'en-US' ? '120px' : '80px'\">\r\n      <el-form-item :label=\"$t('process.assignee')\">\r\n        <el-input v-model=\"dataForm.entrustUserName\" class=\"input-with-select\">\r\n          <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"selectUserInfo()\"></el-button>\r\n        </el-input>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template slot=\"footer\">\r\n      <el-button @click=\"visible = false\">{{ $t('cancel') }}</el-button>\r\n      <el-button type=\"primary\" @click=\"entrustTask()\">{{ $t('confirm') }}</el-button>\r\n    </template>\r\n    <select-user v-if=\"selectUserVisible\" ref=\"selectUser\" ></select-user>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport SelectUser from './select-user'\r\nimport qs from 'qs'\r\nexport default {\r\n  data () {\r\n    return {\r\n      visible: false,\r\n      selectUserVisible: false,\r\n      dataForm: {\r\n        id: '',\r\n        entrustUserId: '',\r\n        entrustUserName: '',\r\n        taskId: ''\r\n      },\r\n      // 回调函数\r\n      callbacks: {\r\n        taskHandleSuccessCallback: null,\r\n        taskHandleErrorCallback: null\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    dataRule () {\r\n      return {\r\n        entrustUserName: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n    SelectUser\r\n  },\r\n  methods: {\r\n    init () {\r\n      this.visible = true\r\n      this.$nextTick(() => {\r\n        this.$refs['dataForm'].resetFields()\r\n      })\r\n    },\r\n    // 委托\r\n    entrustTask () {\r\n      if (!this.dataForm.entrustUserId) {\r\n        this.$message.error(this.$t('process.entrustError'))\r\n        return\r\n      }\r\n      var task = qs.stringify({\r\n        taskId: this.dataForm.taskId,\r\n        assignee: this.dataForm.entrustUserId\r\n      })\r\n      this.$http['post']('/act/task/entrust', task).then(({ data: res }) => {\r\n        if (res.code !== 0) {\r\n          this.$message.error(res.msg)\r\n          if (this.callbacks.taskHandleErrorCallback) {\r\n            this.callbacks.taskHandleErrorCallback(res)\r\n          }\r\n          return\r\n        }\r\n        this.$message({\r\n          message: this.$t('prompt.success'),\r\n          type: 'success',\r\n          duration: 500,\r\n          onClose: () => {\r\n            this.visible = false\r\n            if (this.callbacks.taskHandleSuccessCallback) {\r\n              this.callbacks.taskHandleSuccessCallback(res)\r\n            }\r\n          }\r\n        })\r\n      }).catch(() => {})\r\n    },\r\n    selectUserInfo () {\r\n      this.selectUserVisible = true\r\n      this.$nextTick(() => {\r\n        this.$refs.selectUser.dataForm.id = ''\r\n        this.$refs.selectUser.init(this.setUserInfo)\r\n      })\r\n    },\r\n    setUserInfo (userInfo) {\r\n      this.dataForm.entrustUserId = userInfo.id\r\n      this.dataForm.entrustUserName = userInfo.realName\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components/ren-process-running/src"}]}