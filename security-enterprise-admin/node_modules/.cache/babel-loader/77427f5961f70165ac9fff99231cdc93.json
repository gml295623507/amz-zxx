{"remainingRequest":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/babel-loader/lib/index.js!/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/src/views/modules/activiti/my-todo-task-pool.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/src/views/modules/activiti/my-todo-task-pool.vue","mtime":1569313608000},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":1593769583426},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/babel-loader/lib/index.js","mtime":1593769580300},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":1593769583426},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/vue-loader/lib/index.js","mtime":1593769583804}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport mixinViewModule from '@/mixins/view-module';\nimport processModule from '@/mixins/process-module';\nimport qs from 'qs';\nexport default {\n  mixins: [mixinViewModule, processModule],\n  data: function data() {\n    return {\n      mixinViewModuleOptions: {\n        getDataListURL: '/act/task/page',\n        getDataListIsPage: true,\n        deleteIsBatch: true,\n        deleteIsBatchKey: 'deploymentId'\n      },\n      dataForm: {\n        isRoleGroup: '1',\n        taskName: ''\n      }\n    };\n  },\n  components: {},\n  methods: {\n    claimTask: function claimTask(taskId, processDefinitionKey, businessKey) {\n      var _this = this;\n\n      var params = qs.stringify({\n        'taskId': taskId\n      });\n      this.$http.post(\"/act/task/claim\", params).then(function (_ref) {\n        var res = _ref.data;\n\n        if (res.code !== 0) {\n          return _this.$message.error(res.msg);\n        }\n\n        _this.$message({\n          message: _this.$t('prompt.success'),\n          type: 'success',\n          duration: 500,\n          onClose: function onClose() {\n            _this.getDataList();\n          }\n        });\n      }).catch(function () {});\n    },\n    showDetail: function showDetail(row) {\n      if (!row.businessKey) {\n        return this.$message.error(this.$t('task.detailError'));\n      }\n\n      this.getProcDefRouteSet(row, this.forwardDetail);\n    }\n  }\n};",{"version":3,"sources":["my-todo-task-pool.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,OAAA,eAAA,MAAA,sBAAA;AACA,OAAA,aAAA,MAAA,yBAAA;AACA,OAAA,EAAA,MAAA,IAAA;AACA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,aAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,sBAAA,EAAA;AACA,QAAA,cAAA,EAAA,gBADA;AAEA,QAAA,iBAAA,EAAA,IAFA;AAGA,QAAA,aAAA,EAAA,IAHA;AAIA,QAAA,gBAAA,EAAA;AAJA,OADA;AAOA,MAAA,QAAA,EAAA;AACA,QAAA,WAAA,EAAA,GADA;AAEA,QAAA,QAAA,EAAA;AAFA;AAPA,KAAA;AAYA,GAfA;AAgBA,EAAA,UAAA,EAAA,EAhBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,MADA,EACA,oBADA,EACA,WADA,EACA;AAAA;;AACA,UAAA,MAAA,GAAA,EAAA,CAAA,SAAA,CAAA;AACA,kBAAA;AADA,OAAA,CAAA;AAGA,WAAA,KAAA,CAAA,IAAA,oBAAA,MAAA,EAAA,IAAA,CAAA,gBAAA;AAAA,YAAA,GAAA,QAAA,IAAA;;AACA,YAAA,GAAA,CAAA,IAAA,KAAA,CAAA,EAAA;AACA,iBAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AACA;;AACA,QAAA,KAAA,CAAA,QAAA,CAAA;AACA,UAAA,OAAA,EAAA,KAAA,CAAA,EAAA,CAAA,gBAAA,CADA;AAEA,UAAA,IAAA,EAAA,SAFA;AAGA,UAAA,QAAA,EAAA,GAHA;AAIA,UAAA,OAAA,EAAA,mBAAA;AACA,YAAA,KAAA,CAAA,WAAA;AACA;AANA,SAAA;AAQA,OAZA,EAYA,KAZA,CAYA,YAAA,CAAA,CAZA;AAaA,KAlBA;AAmBA,IAAA,UAnBA,sBAmBA,GAnBA,EAmBA;AACA,UAAA,CAAA,GAAA,CAAA,WAAA,EAAA;AACA,eAAA,KAAA,QAAA,CAAA,KAAA,CAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,CAAA;AACA;;AACA,WAAA,kBAAA,CAAA,GAAA,EAAA,KAAA,aAAA;AACA;AAxBA;AAlBA,CAAA","sourcesContent":["<template>\r\n  <el-card shadow=\"never\" class=\"aui-card--fill\">\r\n    <div class=\"mod-activiti__process\">\r\n      <el-form :inline=\"true\" :model=\"dataForm\" @keyup.enter.native=\"getDataList()\">\r\n        <el-form-item>\r\n          <el-input v-model=\"dataForm.taskName\" :placeholder=\"$t('process.name')\" clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"getDataList()\">{{ $t('query') }}</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-table\r\n        v-loading=\"dataListLoading\"\r\n        :data=\"dataList\"\r\n        border\r\n        @selection-change=\"dataListSelectionChangeHandle\"\r\n        @sort-change=\"dataListSortChangeHandle\"\r\n        style=\"width: 100%;\">\r\n        <el-table-column type=\"selection\" header-align=\"center\" align=\"center\" width=\"50\"></el-table-column>\r\n        <el-table-column prop=\"businessKey\" :label=\"$t('process.businessKey')\" header-align=\"center\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"processInstanceId\" :label=\"$t('running.id')\" header-align=\"center\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"processDefinitionName\" :label=\"$t('process.processDefinitionName')\" header-align=\"center\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"startTime\" :label=\"$t('process.startTime')\" header-align=\"center\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"taskName\" :label=\"$t('process.taskName')\" header-align=\"center\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"createTime\" :label=\"$t('process.createTime')\" header-align=\"center\" align=\"center\"></el-table-column>\r\n        <el-table-column :label=\"$t('handle')\" fixed=\"right\" header-align=\"center\" align=\"center\" width=\"150\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button type=\"text\" size=\"small\" @click=\"claimTask(scope.row.taskId, scope.row.processDefinitionKey, scope.row.businessKey)\">{{ $t('process.claim') }}</el-button>\r\n            <el-button type=\"text\" size=\"small\" @click=\"showDetail(scope.row)\">{{ $t('process.viewFlowImage') }}</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <el-pagination\r\n        :current-page=\"page\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        :page-size=\"limit\"\r\n        :total=\"total\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        @size-change=\"pageSizeChangeHandle\"\r\n        @current-change=\"pageCurrentChangeHandle\">\r\n      </el-pagination>\r\n    </div>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nimport mixinViewModule from '@/mixins/view-module'\r\nimport processModule from '@/mixins/process-module'\r\nimport qs from 'qs'\r\nexport default {\r\n  mixins: [mixinViewModule, processModule],\r\n  data () {\r\n    return {\r\n      mixinViewModuleOptions: {\r\n        getDataListURL: '/act/task/page',\r\n        getDataListIsPage: true,\r\n        deleteIsBatch: true,\r\n        deleteIsBatchKey: 'deploymentId'\r\n      },\r\n      dataForm: {\r\n        isRoleGroup: '1',\r\n        taskName: ''\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n  },\r\n  methods: {\r\n    claimTask (taskId, processDefinitionKey, businessKey) {\r\n      var params = qs.stringify({\r\n        'taskId': taskId\r\n      })\r\n      this.$http.post(`/act/task/claim`, params).then(({ data: res }) => {\r\n        if (res.code !== 0) {\r\n          return this.$message.error(res.msg)\r\n        }\r\n        this.$message({\r\n          message: this.$t('prompt.success'),\r\n          type: 'success',\r\n          duration: 500,\r\n          onClose: () => {\r\n            this.getDataList()\r\n          }\r\n        })\r\n      }).catch(() => {})\r\n    },\r\n    showDetail (row) {\r\n      if (!row.businessKey) {\r\n        return this.$message.error(this.$t('task.detailError'))\r\n      }\r\n      this.getProcDefRouteSet(row, this.forwardDetail)\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/modules/activiti"}]}