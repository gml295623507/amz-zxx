{"remainingRequest":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/babel-loader/lib/index.js!/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/src/views/modules/sys/user-add-or-update.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/src/views/modules/sys/user-add-or-update.vue","mtime":1569313608000},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport _toConsumableArray from \"/Users/95h/95h-Projects/vue-renren\\u540E\\u53F0\\u7BA1\\u7406\\u7CFB\\u7EDF\\u6A21\\u677F/security-enterprise-admin/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/95h/95h-Projects/vue-renren\\u540E\\u53F0\\u7BA1\\u7406\\u7CFB\\u7EDF\\u6A21\\u677F/security-enterprise-admin/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport debounce from 'lodash/debounce';\nimport { isEmail, isMobile } from '@/utils/validate';\nexport default {\n  data: function data() {\n    return {\n      visible: false,\n      roleList: [],\n      roleIdListDefault: [],\n      dataForm: {\n        id: '',\n        username: '',\n        deptId: '',\n        deptName: '',\n        password: '',\n        confirmPassword: '',\n        realName: '',\n        gender: 0,\n        email: '',\n        mobile: '',\n        roleIdList: [],\n        status: 1\n      }\n    };\n  },\n  computed: {\n    dataRule: function dataRule() {\n      var _this = this;\n\n      var validatePassword = function validatePassword(rule, value, callback) {\n        if (!_this.dataForm.id && !/\\S/.test(value)) {\n          return callback(new Error(_this.$t('validate.required')));\n        }\n\n        callback();\n      };\n\n      var validateConfirmPassword = function validateConfirmPassword(rule, value, callback) {\n        if (!_this.dataForm.id && !/\\S/.test(value)) {\n          return callback(new Error(_this.$t('validate.required')));\n        }\n\n        if (_this.dataForm.password !== value) {\n          return callback(new Error(_this.$t('user.validate.confirmPassword')));\n        }\n\n        callback();\n      };\n\n      var validateEmail = function validateEmail(rule, value, callback) {\n        if (value && !isEmail(value)) {\n          return callback(new Error(_this.$t('validate.format', {\n            'attr': _this.$t('user.email')\n          })));\n        }\n\n        callback();\n      };\n\n      var validateMobile = function validateMobile(rule, value, callback) {\n        if (value && !isMobile(value)) {\n          return callback(new Error(_this.$t('validate.format', {\n            'attr': _this.$t('user.mobile')\n          })));\n        }\n\n        callback();\n      };\n\n      return {\n        username: [{\n          required: true,\n          message: this.$t('validate.required'),\n          trigger: 'blur'\n        }],\n        deptName: [{\n          required: true,\n          message: this.$t('validate.required'),\n          trigger: 'change'\n        }],\n        password: [{\n          validator: validatePassword,\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          validator: validateConfirmPassword,\n          trigger: 'blur'\n        }],\n        realName: [{\n          required: true,\n          message: this.$t('validate.required'),\n          trigger: 'blur'\n        }],\n        email: [{\n          validator: validateEmail,\n          trigger: 'blur'\n        }],\n        mobile: [{\n          validator: validateMobile,\n          trigger: 'blur'\n        }]\n      };\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this2 = this;\n\n      this.visible = true;\n      this.dataForm.deptId = '';\n      this.$nextTick(function () {\n        _this2.$refs['dataForm'].resetFields();\n\n        _this2.roleIdListDefault = [];\n        Promise.all([_this2.getRoleList()]).then(function () {\n          if (_this2.dataForm.id) {\n            _this2.getInfo();\n          }\n        });\n      });\n    },\n    // 获取角色列表\n    getRoleList: function getRoleList() {\n      var _this3 = this;\n\n      return this.$http.get('/sys/role/list').then(function (_ref) {\n        var res = _ref.data;\n\n        if (res.code !== 0) {\n          return _this3.$message.error(res.msg);\n        }\n\n        _this3.roleList = res.data;\n      }).catch(function () {});\n    },\n    // 获取信息\n    getInfo: function getInfo() {\n      var _this4 = this;\n\n      this.$http.get(\"/sys/user/\".concat(this.dataForm.id)).then(function (_ref2) {\n        var res = _ref2.data;\n\n        if (res.code !== 0) {\n          return _this4.$message.error(res.msg);\n        }\n\n        _this4.dataForm = _objectSpread({}, _this4.dataForm, {}, res.data, {\n          roleIdList: [] // 角色配置, 区分是否为默认角色\n\n        });\n\n        for (var i = 0; i < res.data.roleIdList.length; i++) {\n          if (_this4.roleList.filter(function (item) {\n            return item.id === res.data.roleIdList[i];\n          })[0]) {\n            _this4.dataForm.roleIdList.push(res.data.roleIdList[i]);\n\n            continue;\n          }\n\n          _this4.roleIdListDefault.push(res.data.roleIdList[i]);\n        }\n      }).catch(function () {});\n    },\n    // 表单提交\n    dataFormSubmitHandle: debounce(function () {\n      var _this5 = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        if (!valid) {\n          return false;\n        }\n\n        _this5.$http[!_this5.dataForm.id ? 'post' : 'put']('/sys/user', _objectSpread({}, _this5.dataForm, {\n          roleIdList: [].concat(_toConsumableArray(_this5.dataForm.roleIdList), _toConsumableArray(_this5.roleIdListDefault))\n        })).then(function (_ref3) {\n          var res = _ref3.data;\n\n          if (res.code !== 0) {\n            return _this5.$message.error(res.msg);\n          }\n\n          _this5.$message({\n            message: _this5.$t('prompt.success'),\n            type: 'success',\n            duration: 500,\n            onClose: function onClose() {\n              _this5.visible = false;\n\n              _this5.$emit('refreshDataList');\n            }\n          });\n        }).catch(function () {});\n      });\n    }, 1000, {\n      'leading': true,\n      'trailing': false\n    })\n  }\n};",{"version":3,"sources":["user-add-or-update.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-dialog :visible.sync=\"visible\" :title=\"!dataForm.id ? $t('add') : $t('update')\" :close-on-click-modal=\"false\" :close-on-press-escape=\"false\">\r\n    <el-form :model=\"dataForm\" :rules=\"dataRule\" ref=\"dataForm\" @keyup.enter.native=\"dataFormSubmitHandle()\" label-width=\"120px\">\r\n      <el-form-item prop=\"username\" :label=\"$t('user.username')\">\r\n        <el-input v-model=\"dataForm.username\" :placeholder=\"$t('user.username')\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"deptName\" :label=\"$t('user.deptName')\">\r\n        <ren-dept-tree v-model=\"dataForm.deptId\" :placeholder=\"$t('dept.title')\" :dept-name.sync=\"dataForm.deptName\"></ren-dept-tree>\r\n      </el-form-item>\r\n      <el-form-item prop=\"password\" :label=\"$t('user.password')\" :class=\"{ 'is-required': !dataForm.id }\">\r\n        <el-input v-model=\"dataForm.password\" type=\"password\" :placeholder=\"$t('user.password')\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"confirmPassword\" :label=\"$t('user.confirmPassword')\" :class=\"{ 'is-required': !dataForm.id }\">\r\n        <el-input v-model=\"dataForm.confirmPassword\" type=\"password\" :placeholder=\"$t('user.confirmPassword')\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"realName\" :label=\"$t('user.realName')\">\r\n        <el-input v-model=\"dataForm.realName\" :placeholder=\"$t('user.realName')\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"gender\" :label=\"$t('user.gender')\">\r\n        <ren-radio-group v-model=\"dataForm.gender\" dict-type=\"gender\"></ren-radio-group>\r\n      </el-form-item>\r\n      <el-form-item prop=\"email\" :label=\"$t('user.email')\">\r\n        <el-input v-model=\"dataForm.email\" :placeholder=\"$t('user.email')\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"mobile\" :label=\"$t('user.mobile')\">\r\n        <el-input v-model=\"dataForm.mobile\" :placeholder=\"$t('user.mobile')\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"roleIdList\" :label=\"$t('user.roleIdList')\" class=\"role-list\">\r\n        <el-select v-model=\"dataForm.roleIdList\" multiple :placeholder=\"$t('user.roleIdList')\">\r\n          <el-option v-for=\"role in roleList\" :key=\"role.id\" :label=\"role.name\" :value=\"role.id\"></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item prop=\"status\" :label=\"$t('user.status')\" size=\"mini\">\r\n        <el-radio-group v-model=\"dataForm.status\">\r\n          <el-radio :label=\"0\">{{ $t('user.status0') }}</el-radio>\r\n          <el-radio :label=\"1\">{{ $t('user.status1') }}</el-radio>\r\n        </el-radio-group>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template slot=\"footer\">\r\n      <el-button @click=\"visible = false\">{{ $t('cancel') }}</el-button>\r\n      <el-button type=\"primary\" @click=\"dataFormSubmitHandle()\">{{ $t('confirm') }}</el-button>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport debounce from 'lodash/debounce'\r\nimport { isEmail, isMobile } from '@/utils/validate'\r\nexport default {\r\n  data () {\r\n    return {\r\n      visible: false,\r\n      roleList: [],\r\n      roleIdListDefault: [],\r\n      dataForm: {\r\n        id: '',\r\n        username: '',\r\n        deptId: '',\r\n        deptName: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        realName: '',\r\n        gender: 0,\r\n        email: '',\r\n        mobile: '',\r\n        roleIdList: [],\r\n        status: 1\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    dataRule () {\r\n      var validatePassword = (rule, value, callback) => {\r\n        if (!this.dataForm.id && !/\\S/.test(value)) {\r\n          return callback(new Error(this.$t('validate.required')))\r\n        }\r\n        callback()\r\n      }\r\n      var validateConfirmPassword = (rule, value, callback) => {\r\n        if (!this.dataForm.id && !/\\S/.test(value)) {\r\n          return callback(new Error(this.$t('validate.required')))\r\n        }\r\n        if (this.dataForm.password !== value) {\r\n          return callback(new Error(this.$t('user.validate.confirmPassword')))\r\n        }\r\n        callback()\r\n      }\r\n      var validateEmail = (rule, value, callback) => {\r\n        if (value && !isEmail(value)) {\r\n          return callback(new Error(this.$t('validate.format', { 'attr': this.$t('user.email') })))\r\n        }\r\n        callback()\r\n      }\r\n      var validateMobile = (rule, value, callback) => {\r\n        if (value && !isMobile(value)) {\r\n          return callback(new Error(this.$t('validate.format', { 'attr': this.$t('user.mobile') })))\r\n        }\r\n        callback()\r\n      }\r\n      return {\r\n        username: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ],\r\n        deptName: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'change' }\r\n        ],\r\n        password: [\r\n          { validator: validatePassword, trigger: 'blur' }\r\n        ],\r\n        confirmPassword: [\r\n          { validator: validateConfirmPassword, trigger: 'blur' }\r\n        ],\r\n        realName: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ],\r\n        email: [\r\n          { validator: validateEmail, trigger: 'blur' }\r\n        ],\r\n        mobile: [\r\n          { validator: validateMobile, trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    init () {\r\n      this.visible = true\r\n      this.dataForm.deptId = ''\r\n      this.$nextTick(() => {\r\n        this.$refs['dataForm'].resetFields()\r\n        this.roleIdListDefault = []\r\n        Promise.all([\r\n          this.getRoleList()\r\n        ]).then(() => {\r\n          if (this.dataForm.id) {\r\n            this.getInfo()\r\n          }\r\n        })\r\n      })\r\n    },\r\n    // 获取角色列表\r\n    getRoleList () {\r\n      return this.$http.get('/sys/role/list').then(({ data: res }) => {\r\n        if (res.code !== 0) {\r\n          return this.$message.error(res.msg)\r\n        }\r\n        this.roleList = res.data\r\n      }).catch(() => {})\r\n    },\r\n    // 获取信息\r\n    getInfo () {\r\n      this.$http.get(`/sys/user/${this.dataForm.id}`).then(({ data: res }) => {\r\n        if (res.code !== 0) {\r\n          return this.$message.error(res.msg)\r\n        }\r\n        this.dataForm = {\r\n          ...this.dataForm,\r\n          ...res.data,\r\n          roleIdList: []\r\n        }\r\n        // 角色配置, 区分是否为默认角色\r\n        for (var i = 0; i < res.data.roleIdList.length; i++) {\r\n          if (this.roleList.filter(item => item.id === res.data.roleIdList[i])[0]) {\r\n            this.dataForm.roleIdList.push(res.data.roleIdList[i])\r\n            continue\r\n          }\r\n          this.roleIdListDefault.push(res.data.roleIdList[i])\r\n        }\r\n      }).catch(() => {})\r\n    },\r\n    // 表单提交\r\n    dataFormSubmitHandle: debounce(function () {\r\n      this.$refs['dataForm'].validate((valid) => {\r\n        if (!valid) {\r\n          return false\r\n        }\r\n        this.$http[!this.dataForm.id ? 'post' : 'put']('/sys/user', {\r\n          ...this.dataForm,\r\n          roleIdList: [\r\n            ...this.dataForm.roleIdList,\r\n            ...this.roleIdListDefault\r\n          ]\r\n        }).then(({ data: res }) => {\r\n          if (res.code !== 0) {\r\n            return this.$message.error(res.msg)\r\n          }\r\n          this.$message({\r\n            message: this.$t('prompt.success'),\r\n            type: 'success',\r\n            duration: 500,\r\n            onClose: () => {\r\n              this.visible = false\r\n              this.$emit('refreshDataList')\r\n            }\r\n          })\r\n        }).catch(() => {})\r\n      })\r\n    }, 1000, { 'leading': true, 'trailing': false })\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.mod-sys__user {\r\n  .role-list {\r\n    .el-select {\r\n      width: 100%;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/modules/sys"}]}