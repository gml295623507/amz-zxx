{"remainingRequest":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/src/views/modules/sys/user-add-or-update.vue?vue&type=template&id=b009f32e&","dependencies":[{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/src/views/modules/sys/user-add-or-update.vue","mtime":1569313608000},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-dialog\",\n    {\n      attrs: {\n        visible: _vm.visible,\n        title: !_vm.dataForm.id ? _vm.$t(\"add\") : _vm.$t(\"update\"),\n        \"close-on-click-modal\": false,\n        \"close-on-press-escape\": false\n      },\n      on: {\n        \"update:visible\": function($event) {\n          _vm.visible = $event\n        }\n      }\n    },\n    [\n      _c(\n        \"el-form\",\n        {\n          ref: \"dataForm\",\n          attrs: {\n            model: _vm.dataForm,\n            rules: _vm.dataRule,\n            \"label-width\": \"120px\"\n          },\n          nativeOn: {\n            keyup: function($event) {\n              if (\n                !$event.type.indexOf(\"key\") &&\n                _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n              ) {\n                return null\n              }\n              return _vm.dataFormSubmitHandle()\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"username\", label: _vm.$t(\"user.username\") } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: _vm.$t(\"user.username\") },\n                model: {\n                  value: _vm.dataForm.username,\n                  callback: function($$v) {\n                    _vm.$set(_vm.dataForm, \"username\", $$v)\n                  },\n                  expression: \"dataForm.username\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"deptName\", label: _vm.$t(\"user.deptName\") } },\n            [\n              _c(\"ren-dept-tree\", {\n                attrs: {\n                  placeholder: _vm.$t(\"dept.title\"),\n                  \"dept-name\": _vm.dataForm.deptName\n                },\n                on: {\n                  \"update:deptName\": function($event) {\n                    return _vm.$set(_vm.dataForm, \"deptName\", $event)\n                  },\n                  \"update:dept-name\": function($event) {\n                    return _vm.$set(_vm.dataForm, \"deptName\", $event)\n                  }\n                },\n                model: {\n                  value: _vm.dataForm.deptId,\n                  callback: function($$v) {\n                    _vm.$set(_vm.dataForm, \"deptId\", $$v)\n                  },\n                  expression: \"dataForm.deptId\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            {\n              class: { \"is-required\": !_vm.dataForm.id },\n              attrs: { prop: \"password\", label: _vm.$t(\"user.password\") }\n            },\n            [\n              _c(\"el-input\", {\n                attrs: {\n                  type: \"password\",\n                  placeholder: _vm.$t(\"user.password\")\n                },\n                model: {\n                  value: _vm.dataForm.password,\n                  callback: function($$v) {\n                    _vm.$set(_vm.dataForm, \"password\", $$v)\n                  },\n                  expression: \"dataForm.password\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            {\n              class: { \"is-required\": !_vm.dataForm.id },\n              attrs: {\n                prop: \"confirmPassword\",\n                label: _vm.$t(\"user.confirmPassword\")\n              }\n            },\n            [\n              _c(\"el-input\", {\n                attrs: {\n                  type: \"password\",\n                  placeholder: _vm.$t(\"user.confirmPassword\")\n                },\n                model: {\n                  value: _vm.dataForm.confirmPassword,\n                  callback: function($$v) {\n                    _vm.$set(_vm.dataForm, \"confirmPassword\", $$v)\n                  },\n                  expression: \"dataForm.confirmPassword\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"realName\", label: _vm.$t(\"user.realName\") } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: _vm.$t(\"user.realName\") },\n                model: {\n                  value: _vm.dataForm.realName,\n                  callback: function($$v) {\n                    _vm.$set(_vm.dataForm, \"realName\", $$v)\n                  },\n                  expression: \"dataForm.realName\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"gender\", label: _vm.$t(\"user.gender\") } },\n            [\n              _c(\"ren-radio-group\", {\n                attrs: { \"dict-type\": \"gender\" },\n                model: {\n                  value: _vm.dataForm.gender,\n                  callback: function($$v) {\n                    _vm.$set(_vm.dataForm, \"gender\", $$v)\n                  },\n                  expression: \"dataForm.gender\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"email\", label: _vm.$t(\"user.email\") } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: _vm.$t(\"user.email\") },\n                model: {\n                  value: _vm.dataForm.email,\n                  callback: function($$v) {\n                    _vm.$set(_vm.dataForm, \"email\", $$v)\n                  },\n                  expression: \"dataForm.email\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"mobile\", label: _vm.$t(\"user.mobile\") } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: _vm.$t(\"user.mobile\") },\n                model: {\n                  value: _vm.dataForm.mobile,\n                  callback: function($$v) {\n                    _vm.$set(_vm.dataForm, \"mobile\", $$v)\n                  },\n                  expression: \"dataForm.mobile\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            {\n              staticClass: \"role-list\",\n              attrs: { prop: \"roleIdList\", label: _vm.$t(\"user.roleIdList\") }\n            },\n            [\n              _c(\n                \"el-select\",\n                {\n                  attrs: {\n                    multiple: \"\",\n                    placeholder: _vm.$t(\"user.roleIdList\")\n                  },\n                  model: {\n                    value: _vm.dataForm.roleIdList,\n                    callback: function($$v) {\n                      _vm.$set(_vm.dataForm, \"roleIdList\", $$v)\n                    },\n                    expression: \"dataForm.roleIdList\"\n                  }\n                },\n                _vm._l(_vm.roleList, function(role) {\n                  return _c(\"el-option\", {\n                    key: role.id,\n                    attrs: { label: role.name, value: role.id }\n                  })\n                }),\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            {\n              attrs: {\n                prop: \"status\",\n                label: _vm.$t(\"user.status\"),\n                size: \"mini\"\n              }\n            },\n            [\n              _c(\n                \"el-radio-group\",\n                {\n                  model: {\n                    value: _vm.dataForm.status,\n                    callback: function($$v) {\n                      _vm.$set(_vm.dataForm, \"status\", $$v)\n                    },\n                    expression: \"dataForm.status\"\n                  }\n                },\n                [\n                  _c(\"el-radio\", { attrs: { label: 0 } }, [\n                    _vm._v(_vm._s(_vm.$t(\"user.status0\")))\n                  ]),\n                  _c(\"el-radio\", { attrs: { label: 1 } }, [\n                    _vm._v(_vm._s(_vm.$t(\"user.status1\")))\n                  ])\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"template\",\n        { slot: \"footer\" },\n        [\n          _c(\n            \"el-button\",\n            {\n              on: {\n                click: function($event) {\n                  _vm.visible = false\n                }\n              }\n            },\n            [_vm._v(_vm._s(_vm.$t(\"cancel\")))]\n          ),\n          _c(\n            \"el-button\",\n            {\n              attrs: { type: \"primary\" },\n              on: {\n                click: function($event) {\n                  return _vm.dataFormSubmitHandle()\n                }\n              }\n            },\n            [_vm._v(_vm._s(_vm.$t(\"confirm\")))]\n          )\n        ],\n        1\n      )\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}