{"remainingRequest":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/src/views/modules/sys/menu-add-or-update.vue?vue&type=template&id=511f72fd&","dependencies":[{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/src/views/modules/sys/menu-add-or-update.vue","mtime":1569313608000},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":1593769583426},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1593769583804},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":1593769583426},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/vue-loader/lib/index.js","mtime":1593769583804}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-dialog\",\n    {\n      attrs: {\n        visible: _vm.visible,\n        title: !_vm.dataForm.id ? _vm.$t(\"add\") : _vm.$t(\"update\"),\n        \"close-on-click-modal\": false,\n        \"close-on-press-escape\": false\n      },\n      on: {\n        \"update:visible\": function($event) {\n          _vm.visible = $event\n        }\n      }\n    },\n    [\n      _c(\n        \"el-form\",\n        {\n          ref: \"dataForm\",\n          attrs: {\n            model: _vm.dataForm,\n            rules: _vm.dataRule,\n            \"label-width\": \"120px\"\n          },\n          nativeOn: {\n            keyup: function($event) {\n              if (\n                !$event.type.indexOf(\"key\") &&\n                _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n              ) {\n                return null\n              }\n              return _vm.dataFormSubmitHandle()\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            {\n              attrs: { prop: \"type\", label: _vm.$t(\"menu.type\"), size: \"mini\" }\n            },\n            [\n              _c(\n                \"el-radio-group\",\n                {\n                  attrs: { disabled: !!_vm.dataForm.id },\n                  model: {\n                    value: _vm.dataForm.type,\n                    callback: function($$v) {\n                      _vm.$set(_vm.dataForm, \"type\", $$v)\n                    },\n                    expression: \"dataForm.type\"\n                  }\n                },\n                [\n                  _c(\"el-radio\", { attrs: { label: 0 } }, [\n                    _vm._v(_vm._s(_vm.$t(\"menu.type0\")))\n                  ]),\n                  _c(\"el-radio\", { attrs: { label: 1 } }, [\n                    _vm._v(_vm._s(_vm.$t(\"menu.type1\")))\n                  ])\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"name\", label: _vm.$t(\"menu.name\") } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: _vm.$t(\"menu.name\") },\n                model: {\n                  value: _vm.dataForm.name,\n                  callback: function($$v) {\n                    _vm.$set(_vm.dataForm, \"name\", $$v)\n                  },\n                  expression: \"dataForm.name\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            {\n              staticClass: \"menu-list\",\n              attrs: { prop: \"parentName\", label: _vm.$t(\"menu.parentName\") }\n            },\n            [\n              _c(\n                \"el-popover\",\n                {\n                  ref: \"menuListPopover\",\n                  attrs: { placement: \"bottom-start\", trigger: \"click\" },\n                  model: {\n                    value: _vm.menuListVisible,\n                    callback: function($$v) {\n                      _vm.menuListVisible = $$v\n                    },\n                    expression: \"menuListVisible\"\n                  }\n                },\n                [\n                  _c(\"el-tree\", {\n                    ref: \"menuListTree\",\n                    attrs: {\n                      data: _vm.menuList,\n                      props: { label: \"name\", children: \"children\" },\n                      \"node-key\": \"id\",\n                      \"highlight-current\": true,\n                      \"expand-on-click-node\": false,\n                      accordion: \"\"\n                    },\n                    on: {\n                      \"current-change\": _vm.menuListTreeCurrentChangeHandle\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-input\",\n                {\n                  directives: [\n                    {\n                      name: \"popover\",\n                      rawName: \"v-popover:menuListPopover\",\n                      arg: \"menuListPopover\"\n                    }\n                  ],\n                  attrs: {\n                    readonly: true,\n                    placeholder: _vm.$t(\"menu.parentName\")\n                  },\n                  model: {\n                    value: _vm.dataForm.parentName,\n                    callback: function($$v) {\n                      _vm.$set(_vm.dataForm, \"parentName\", $$v)\n                    },\n                    expression: \"dataForm.parentName\"\n                  }\n                },\n                [\n                  _vm.dataForm.pid !== \"0\"\n                    ? _c(\"i\", {\n                        staticClass: \"el-icon-circle-close el-input__icon\",\n                        attrs: { slot: \"suffix\" },\n                        on: {\n                          click: function($event) {\n                            $event.stopPropagation()\n                            return _vm.deptListTreeSetDefaultHandle()\n                          }\n                        },\n                        slot: \"suffix\"\n                      })\n                    : _vm._e()\n                ]\n              )\n            ],\n            1\n          ),\n          _vm.dataForm.type === 0\n            ? _c(\n                \"el-form-item\",\n                { attrs: { prop: \"url\", label: _vm.$t(\"menu.url\") } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { placeholder: _vm.$t(\"menu.url\") },\n                    model: {\n                      value: _vm.dataForm.url,\n                      callback: function($$v) {\n                        _vm.$set(_vm.dataForm, \"url\", $$v)\n                      },\n                      expression: \"dataForm.url\"\n                    }\n                  })\n                ],\n                1\n              )\n            : _vm._e(),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"sort\", label: _vm.$t(\"menu.sort\") } },\n            [\n              _c(\"el-input-number\", {\n                attrs: {\n                  \"controls-position\": \"right\",\n                  min: 0,\n                  label: _vm.$t(\"menu.sort\")\n                },\n                model: {\n                  value: _vm.dataForm.sort,\n                  callback: function($$v) {\n                    _vm.$set(_vm.dataForm, \"sort\", $$v)\n                  },\n                  expression: \"dataForm.sort\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            {\n              attrs: { prop: \"permissions\", label: _vm.$t(\"menu.permissions\") }\n            },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: _vm.$t(\"menu.permissionsTips\") },\n                model: {\n                  value: _vm.dataForm.permissions,\n                  callback: function($$v) {\n                    _vm.$set(_vm.dataForm, \"permissions\", $$v)\n                  },\n                  expression: \"dataForm.permissions\"\n                }\n              })\n            ],\n            1\n          ),\n          _vm.dataForm.type === 0\n            ? _c(\n                \"el-form-item\",\n                {\n                  staticClass: \"icon-list\",\n                  attrs: { prop: \"icon\", label: _vm.$t(\"menu.icon\") }\n                },\n                [\n                  _c(\n                    \"el-popover\",\n                    {\n                      ref: \"iconListPopover\",\n                      attrs: {\n                        placement: \"bottom-start\",\n                        trigger: \"click\",\n                        \"popper-class\": \"mod-sys__menu-icon-popover\"\n                      },\n                      model: {\n                        value: _vm.iconListVisible,\n                        callback: function($$v) {\n                          _vm.iconListVisible = $$v\n                        },\n                        expression: \"iconListVisible\"\n                      }\n                    },\n                    [\n                      _c(\"div\", { staticClass: \"mod-sys__menu-icon-inner\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"mod-sys__menu-icon-list\" },\n                          _vm._l(_vm.iconList, function(item, index) {\n                            return _c(\n                              \"el-button\",\n                              {\n                                key: index,\n                                class: {\n                                  \"is-active\": _vm.dataForm.icon === item\n                                },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.iconListCurrentChangeHandle(item)\n                                  }\n                                }\n                              },\n                              [\n                                _c(\n                                  \"svg\",\n                                  {\n                                    staticClass: \"icon-svg\",\n                                    attrs: { \"aria-hidden\": \"true\" }\n                                  },\n                                  [\n                                    _c(\"use\", {\n                                      attrs: { \"xlink:href\": \"#\" + item }\n                                    })\n                                  ]\n                                )\n                              ]\n                            )\n                          }),\n                          1\n                        )\n                      ])\n                    ]\n                  ),\n                  _c(\"el-input\", {\n                    directives: [\n                      {\n                        name: \"popover\",\n                        rawName: \"v-popover:iconListPopover\",\n                        arg: \"iconListPopover\"\n                      }\n                    ],\n                    attrs: { readonly: true, placeholder: _vm.$t(\"menu.icon\") },\n                    model: {\n                      value: _vm.dataForm.icon,\n                      callback: function($$v) {\n                        _vm.$set(_vm.dataForm, \"icon\", $$v)\n                      },\n                      expression: \"dataForm.icon\"\n                    }\n                  })\n                ],\n                1\n              )\n            : _vm._e()\n        ],\n        1\n      ),\n      _c(\n        \"template\",\n        { slot: \"footer\" },\n        [\n          _c(\n            \"el-button\",\n            {\n              on: {\n                click: function($event) {\n                  _vm.visible = false\n                }\n              }\n            },\n            [_vm._v(_vm._s(_vm.$t(\"cancel\")))]\n          ),\n          _c(\n            \"el-button\",\n            {\n              attrs: { type: \"primary\" },\n              on: {\n                click: function($event) {\n                  return _vm.dataFormSubmitHandle()\n                }\n              }\n            },\n            [_vm._v(_vm._s(_vm.$t(\"confirm\")))]\n          )\n        ],\n        1\n      )\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}