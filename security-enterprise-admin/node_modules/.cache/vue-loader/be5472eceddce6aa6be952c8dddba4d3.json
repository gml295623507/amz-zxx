{"remainingRequest":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/src/components/ren-process-running/src/ren-task-entrust.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/src/components/ren-process-running/src/ren-task-entrust.vue","mtime":1569313608000},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":1593769583426},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/babel-loader/lib/index.js","mtime":1593769580300},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":1593769583426},{"path":"/Users/95h/95h-Projects/security-enterprise-2.4.0/security-enterprise-admin/node_modules/vue-loader/lib/index.js","mtime":1593769583804}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport SelectUser from './select-user'\r\nimport qs from 'qs'\r\nexport default {\r\n  data () {\r\n    return {\r\n      visible: false,\r\n      selectUserVisible: false,\r\n      dataForm: {\r\n        id: '',\r\n        entrustUserId: '',\r\n        entrustUserName: '',\r\n        taskId: ''\r\n      },\r\n      // 回调函数\r\n      callbacks: {\r\n        taskHandleSuccessCallback: null,\r\n        taskHandleErrorCallback: null\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    dataRule () {\r\n      return {\r\n        entrustUserName: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n    SelectUser\r\n  },\r\n  methods: {\r\n    init () {\r\n      this.visible = true\r\n      this.$nextTick(() => {\r\n        this.$refs['dataForm'].resetFields()\r\n      })\r\n    },\r\n    // 委托\r\n    entrustTask () {\r\n      if (!this.dataForm.entrustUserId) {\r\n        this.$message.error(this.$t('process.entrustError'))\r\n        return\r\n      }\r\n      var task = qs.stringify({\r\n        taskId: this.dataForm.taskId,\r\n        assignee: this.dataForm.entrustUserId\r\n      })\r\n      this.$http['post']('/act/task/entrust', task).then(({ data: res }) => {\r\n        if (res.code !== 0) {\r\n          this.$message.error(res.msg)\r\n          if (this.callbacks.taskHandleErrorCallback) {\r\n            this.callbacks.taskHandleErrorCallback(res)\r\n          }\r\n          return\r\n        }\r\n        this.$message({\r\n          message: this.$t('prompt.success'),\r\n          type: 'success',\r\n          duration: 500,\r\n          onClose: () => {\r\n            this.visible = false\r\n            if (this.callbacks.taskHandleSuccessCallback) {\r\n              this.callbacks.taskHandleSuccessCallback(res)\r\n            }\r\n          }\r\n        })\r\n      }).catch(() => {})\r\n    },\r\n    selectUserInfo () {\r\n      this.selectUserVisible = true\r\n      this.$nextTick(() => {\r\n        this.$refs.selectUser.dataForm.id = ''\r\n        this.$refs.selectUser.init(this.setUserInfo)\r\n      })\r\n    },\r\n    setUserInfo (userInfo) {\r\n      this.dataForm.entrustUserId = userInfo.id\r\n      this.dataForm.entrustUserName = userInfo.realName\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["ren-task-entrust.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ren-task-entrust.vue","sourceRoot":"src/components/ren-process-running/src","sourcesContent":["<template>\r\n  <el-dialog :visible.sync=\"visible\" :title=\"$t('process.entrustTask')\" :close-on-click-modal=\"false\" :close-on-press-escape=\"false\">\r\n    <el-form :model=\"dataForm\" :rules=\"dataRule\" ref=\"dataForm\" @keyup.enter.native=\"dataFormSubmitHandle()\" :label-width=\"$i18n.locale === 'en-US' ? '120px' : '80px'\">\r\n      <el-form-item :label=\"$t('process.assignee')\">\r\n        <el-input v-model=\"dataForm.entrustUserName\" class=\"input-with-select\">\r\n          <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"selectUserInfo()\"></el-button>\r\n        </el-input>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template slot=\"footer\">\r\n      <el-button @click=\"visible = false\">{{ $t('cancel') }}</el-button>\r\n      <el-button type=\"primary\" @click=\"entrustTask()\">{{ $t('confirm') }}</el-button>\r\n    </template>\r\n    <select-user v-if=\"selectUserVisible\" ref=\"selectUser\" ></select-user>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport SelectUser from './select-user'\r\nimport qs from 'qs'\r\nexport default {\r\n  data () {\r\n    return {\r\n      visible: false,\r\n      selectUserVisible: false,\r\n      dataForm: {\r\n        id: '',\r\n        entrustUserId: '',\r\n        entrustUserName: '',\r\n        taskId: ''\r\n      },\r\n      // 回调函数\r\n      callbacks: {\r\n        taskHandleSuccessCallback: null,\r\n        taskHandleErrorCallback: null\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    dataRule () {\r\n      return {\r\n        entrustUserName: [\r\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n    SelectUser\r\n  },\r\n  methods: {\r\n    init () {\r\n      this.visible = true\r\n      this.$nextTick(() => {\r\n        this.$refs['dataForm'].resetFields()\r\n      })\r\n    },\r\n    // 委托\r\n    entrustTask () {\r\n      if (!this.dataForm.entrustUserId) {\r\n        this.$message.error(this.$t('process.entrustError'))\r\n        return\r\n      }\r\n      var task = qs.stringify({\r\n        taskId: this.dataForm.taskId,\r\n        assignee: this.dataForm.entrustUserId\r\n      })\r\n      this.$http['post']('/act/task/entrust', task).then(({ data: res }) => {\r\n        if (res.code !== 0) {\r\n          this.$message.error(res.msg)\r\n          if (this.callbacks.taskHandleErrorCallback) {\r\n            this.callbacks.taskHandleErrorCallback(res)\r\n          }\r\n          return\r\n        }\r\n        this.$message({\r\n          message: this.$t('prompt.success'),\r\n          type: 'success',\r\n          duration: 500,\r\n          onClose: () => {\r\n            this.visible = false\r\n            if (this.callbacks.taskHandleSuccessCallback) {\r\n              this.callbacks.taskHandleSuccessCallback(res)\r\n            }\r\n          }\r\n        })\r\n      }).catch(() => {})\r\n    },\r\n    selectUserInfo () {\r\n      this.selectUserVisible = true\r\n      this.$nextTick(() => {\r\n        this.$refs.selectUser.dataForm.id = ''\r\n        this.$refs.selectUser.init(this.setUserInfo)\r\n      })\r\n    },\r\n    setUserInfo (userInfo) {\r\n      this.dataForm.entrustUserId = userInfo.id\r\n      this.dataForm.entrustUserName = userInfo.realName\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}