{"remainingRequest":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/src/views/pages/register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/src/views/pages/register.vue","mtime":1594608279103},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":1593769583426},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/babel-loader/lib/index.js","mtime":1593769580300},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/cache-loader/dist/cjs.js","mtime":1593769583426},{"path":"/Users/95h/95h-Projects/vue-renren后台管理系统模板/security-enterprise-admin/node_modules/vue-loader/lib/index.js","mtime":1593769583804}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// import Cookies from 'js-cookie'\nimport debounce from 'lodash/debounce'\nimport { messages } from '@/i18n'\nimport { getUUID } from '@/utils'\nexport default {\n  data () {\n    return {\n      i18nMessages: messages,\n      captchaPath: '',\n      dataForm: {\n        username: '',\n        password: '',\n        checkPassword: '',\n        uuid: '',\n        captcha: ''\n      }\n    }\n  },\n  computed: {\n    dataRule () {\n      let password = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error(this.$t('validate.required')))\n        } else {\n          if (this.dataForm.checkPassword !== '') {\n            this.$refs.dataForm.validateField('checkPassword')\n          }\n          callback()\n        }\n      }\n      let checkPassword = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error(this.$t('validate.required')))\n        } else if (value !== this.dataForm.password) {\n          callback(new Error('两次输入密码不一致!'))\n        } else {\n          callback()\n        }\n      }\n      return {\n        username: [\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\n        ],\n        password: [\n          { validator: password, trigger: 'blur' }\n        ],\n        checkPassword: [\n          { validator: checkPassword, trigger: 'blur' }\n        ],\n        captcha: [\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created () {\n    this.getCaptcha()\n  },\n  methods: {\n    // 获取验证码\n    getCaptcha () {\n      this.dataForm.uuid = getUUID()\n      this.captchaPath = `${window.SITE_CONFIG['apiURL']}/captcha?uuid=${this.dataForm.uuid}`\n    },\n    // 跳转登录页面\n    robackLogin () {\n      this.$router.replace({ name: 'login' })\n    },\n    // 表单提交\n    dataFormSubmitHandle: debounce(function () {\n      this.$refs['dataForm'].validate((valid) => {\n        if (!valid) {\n          return false\n        }\n        this.$http.post('/register', this.dataForm).then(({ data: res }) => {\n          if (res.code !== 0) {\n            this.getCaptcha()\n            return this.$message.error(res.msg)\n          }\n          // Cookies.set('token', res.data.token)\n          this.$message.success('注册成功!')\n          this.$router.replace({ name: 'login' })\n        }).catch(() => {\n        //   this.$message.error('注册失败!请重新注册')\n        //   this.$router.replace({ name: 'register' })\n        })\n      })\n    }, 1000, { 'leading': true, 'trailing': false })\n  }\n}\n",{"version":3,"sources":["register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"register.vue","sourceRoot":"src/views/pages","sourcesContent":["<template>\n  <div class=\"aui-wrapper aui-page__login\">\n    <div class=\"aui-content__wrapper\">\n      <main class=\"aui-content\">\n        <div class=\"login-header\">\n          <h2 class=\"login-brand\">{{ $t('brand.lg') }}</h2>\n        </div>\n        <div class=\"login-body\">\n          <h3 class=\"login-title\">{{ $t('register.title') }}</h3>\n          <el-form :model=\"dataForm\" :rules=\"dataRule\" ref=\"dataForm\" @keyup.enter.native=\"dataFormSubmitHandle()\" status-icon>\n            <el-form-item>\n              <el-select v-model=\"$i18n.locale\" class=\"w-percent-100\">\n                <el-option v-for=\"(val, key) in i18nMessages\" :key=\"key\" :label=\"val._lang\" :value=\"key\"></el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item prop=\"username\">\n              <el-input v-model=\"dataForm.username\" :placeholder=\"$t('register.username')\">\n                <span slot=\"prefix\" class=\"el-input__icon\">\n                  <svg class=\"icon-svg\" aria-hidden=\"true\"><use xlink:href=\"#icon-user\"></use></svg>\n                </span>\n              </el-input>\n            </el-form-item>\n            <el-form-item prop=\"password\">\n              <el-input v-model=\"dataForm.password\" type=\"password\" :placeholder=\"$t('register.password')\">\n                <span slot=\"prefix\" class=\"el-input__icon\">\n                  <svg class=\"icon-svg\" aria-hidden=\"true\"><use xlink:href=\"#icon-lock\"></use></svg>\n                </span>\n              </el-input>\n            </el-form-item>\n            <el-form-item prop=\"checkPassword\">\n              <el-input v-model=\"dataForm.checkPassword\" type=\"password\" :placeholder=\"$t('register.checkPassword')\">\n                <span slot=\"prefix\" class=\"el-input__icon\">\n                  <svg class=\"icon-svg\" aria-hidden=\"true\"><use xlink:href=\"#icon-lock\"></use></svg>\n                </span>\n              </el-input>\n            </el-form-item>\n            <el-form-item prop=\"captcha\">\n              <el-row :gutter=\"20\">\n                <el-col :span=\"14\">\n                  <el-input v-model=\"dataForm.captcha\" :placeholder=\"$t('login.captcha')\">\n                    <span slot=\"prefix\" class=\"el-input__icon\">\n                      <svg class=\"icon-svg\" aria-hidden=\"true\"><use xlink:href=\"#icon-safetycertificate\"></use></svg>\n                    </span>\n                  </el-input>\n                </el-col>\n                <el-col :span=\"10\" class=\"login-captcha\">\n                  <img :src=\"captchaPath\" @click=\"getCaptcha()\">\n                </el-col>\n              </el-row>\n            </el-form-item>\n            <el-form-item>\n              <el-button type=\"primary\" @click=\"dataFormSubmitHandle()\" class=\"w-percent-100\">{{ $t('register.title') }}</el-button>\n            </el-form-item>\n              <p><a @click=\"robackLogin()\" target=\"_blank\">{{ $t('register.roback') }}</a></p>\n          </el-form>\n        </div>\n        <div class=\"login-footer\">\n          <p>2020 © 95h·私人订制</p>\n        </div>\n      </main>\n    </div>\n  </div>\n</template>\n\n<script>\n// import Cookies from 'js-cookie'\nimport debounce from 'lodash/debounce'\nimport { messages } from '@/i18n'\nimport { getUUID } from '@/utils'\nexport default {\n  data () {\n    return {\n      i18nMessages: messages,\n      captchaPath: '',\n      dataForm: {\n        username: '',\n        password: '',\n        checkPassword: '',\n        uuid: '',\n        captcha: ''\n      }\n    }\n  },\n  computed: {\n    dataRule () {\n      let password = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error(this.$t('validate.required')))\n        } else {\n          if (this.dataForm.checkPassword !== '') {\n            this.$refs.dataForm.validateField('checkPassword')\n          }\n          callback()\n        }\n      }\n      let checkPassword = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error(this.$t('validate.required')))\n        } else if (value !== this.dataForm.password) {\n          callback(new Error('两次输入密码不一致!'))\n        } else {\n          callback()\n        }\n      }\n      return {\n        username: [\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\n        ],\n        password: [\n          { validator: password, trigger: 'blur' }\n        ],\n        checkPassword: [\n          { validator: checkPassword, trigger: 'blur' }\n        ],\n        captcha: [\n          { required: true, message: this.$t('validate.required'), trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created () {\n    this.getCaptcha()\n  },\n  methods: {\n    // 获取验证码\n    getCaptcha () {\n      this.dataForm.uuid = getUUID()\n      this.captchaPath = `${window.SITE_CONFIG['apiURL']}/captcha?uuid=${this.dataForm.uuid}`\n    },\n    // 跳转登录页面\n    robackLogin () {\n      this.$router.replace({ name: 'login' })\n    },\n    // 表单提交\n    dataFormSubmitHandle: debounce(function () {\n      this.$refs['dataForm'].validate((valid) => {\n        if (!valid) {\n          return false\n        }\n        this.$http.post('/register', this.dataForm).then(({ data: res }) => {\n          if (res.code !== 0) {\n            this.getCaptcha()\n            return this.$message.error(res.msg)\n          }\n          // Cookies.set('token', res.data.token)\n          this.$message.success('注册成功!')\n          this.$router.replace({ name: 'login' })\n        }).catch(() => {\n        //   this.$message.error('注册失败!请重新注册')\n        //   this.$router.replace({ name: 'register' })\n        })\n      })\n    }, 1000, { 'leading': true, 'trailing': false })\n  }\n}\n</script>\n"]}]}